<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Navigation</title><link rel="stylesheet" href="slickedit_help.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.71.1"><link rel="start" href="index.htm" title="Welcome to SlickEdit 2013"><link rel="up" href="ch08.htm" title="Chapter 8.  Editing Features"><link rel="prev" href="ch08s03.htm" title="Basic Editing"><link rel="next" href="ch08s05.htm" title="Symbol Browsing"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><p class="HeaderText"><a href="index.htm#contents">Contents</a> : <a href="ix01.htm">Index</a> : <a href="search.htm">Search</a></p><hr><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="sect_navigation_12313_17175"></a>
    <a name="sect_navigation_12313_998341"></a>
    <a class="indexterm" name="sect_navigation_4713DB91_89D7"></a>Navigation</h2></div></div></div><p class="NormalText">There are two types of navigation in SlickEdit®: <a href="ch08s04.htm#sect_navigation_12313_73460">Code Navigation</a>, which provides in-depth symbol navigation and structure matching, and <a href="ch08s04.htm#sect_navigation_12313_95303">Cursor Navigation</a>, which pertains to more simple movements within text and files.</p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_navigation_12313_73460"></a>
      <a name="sect_navigation_12313_1007272"></a>
      <a class="indexterm" name="sect_navigation_380C096B_CD43"></a>Code Navigation</h3></div></div></div><p class="NormalText">Some of the most powerful features in SlickEdit are its code navigation methods, particularly <a href="ch08s04.htm#sect_navigation_12313_69846">Symbol Navigation</a>. These features allow you to navigate your code the way you think about it, rather than just as a set of files. If you aren't using SlickEdit's code navigation features, you aren't getting the most out of the editor.</p><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_navigation_12313_69846"></a>
        <a name="sect_navigation_12313_1007281"></a>
        <a class="indexterm" name="sect_navigation_5D08C8A4_FD41"></a>
        <a class="indexterm" name="sect_navigation_6517BDC8_98A7"></a>
        <a class="indexterm" name="sect_navigation_7FE1497E_D2A7"></a>
        <a class="indexterm" name="sect_navigation_CDFFB2ED_DE2B"></a>
        <a class="indexterm" name="sect_navigation_F78A7ACC_396F"></a>Symbol Navigation</h4></div></div></div><p class="NormalText">Symbol Navigation allows you to jump from a symbol to its definition or to a reference with a single keystroke. A pushed bookmark is set, allowing you to return to the symbol with another keystroke. You can chain a series of these navigation operations together, creating a stack of locations. Then pop your way back to the starting location. </p><p class="NormalText">To navigate between symbols use the following operations:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
            <a class="indexterm" name="sect_navigation_94408E2C_9E31"></a>
            <span><strong class="guimenu">Go to Definition</strong></span> - To quickly move the cursor from a symbol to its definition, pushing a bookmark in the process, press <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Dot</strong></span>. Alternatively, click <span><strong class="guimenu">Search </strong></span> &#8594; <span><strong class="guimenuitem">Go to Definition</strong></span> or use the <span><strong class="command">push_tag</strong></span> command.</p></li><li><p class="NormalText">
            <a class="indexterm" name="sect_navigation_3C9409CB_E1CF"></a>
            <span><strong class="guimenu">Go to Reference</strong></span> - To create a list of references and optionally jump to the first one, pushing a bookmark in the process, press <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">/</strong></span>. Alternatively, click <span><strong class="guimenu">Search </strong></span> &#8594; <span><strong class="guimenuitem">Go to Reference</strong></span> or use the <span><strong class="command">push_ref</strong></span> command.</p></li><li><p class="NormalText">
            <a class="indexterm" name="sect_navigation_B2DA9329_BBF6"></a>
            <span><strong class="guimenu">Pop Bookmark</strong></span> - To pop the bookmark and return to the previous location, press <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Comma</strong></span>. Alternatively, click <span><strong class="guimenu">Search </strong></span> &#8594; <span><strong class="guimenuitem">Bookmarks </strong></span> &#8594; <span><strong class="guimenuitem">Pop Bookmark</strong></span> or use the <span><strong class="command">pop_bookmark</strong></span> command. See <a href="ch08s15.htm#sect_bookmarks_12725_66247">Pushed Bookmarks</a> for more information about working with bookmarks.</p></li></ul></div><p class="NormalText">When you first call these operations, if a tag file does not exist for the current file, it will be built (see <a href="ch06s02.htm#sect_buildingmanagingtagfiles_14858_71586">Building Tag Files</a>).</p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="tip" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Tip</h3><p class="CellBody">
          <span class="bold"><strong>
            <a class="indexterm" name="sect_navigation_AED79DC4_B823"></a>Procs and prototypes</strong></span> - In C and C++, navigating from a 
            symbol to its definition will prompt you to select whether you want to go to 
            the prototype or the function. You can tell SlickEdit® to always go to one or 
            the other by setting one of the options <span><strong class="guilabel">Prioritize navigation to 
            symbol definition (proc)</strong></span> or <span><strong class="guilabel">Prioritize navigation to 
            symbol declaration (proto)</strong></span>. To set these options, from the main 
            menu, click <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Languages</strong></span>, expand your 
            language category and language, then select <span><strong class="guimenu">Context Tagging®</strong></span>. 
            When the cursor is in the prototype, pressing <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Dot</strong></span> 
            will navigate to the function and vice versa. If you do not set one of these 
            options, you will be prompted with the <a href="ch12s03.htm#sect_options_menuanddialogs_14207_17589">Select Symbol Dialog</a> the first time you 
            navigate from a symbol to its definition.</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithfiles_13027_80696"></a>
          <a name="sect_workingwithfiles_13027_1016901"></a>
          <a class="indexterm" name="sect_workingwithfiles_9FC51D5F_840E"></a>
          <a class="indexterm" name="sect_workingwithfiles_08E5054E_9D68"></a>Automatically Closing Visited Files</h5></div></div></div><p class="NormalText">Some features and operations in SlickEdit® automatically open files for "visiting", such as Go to Definition and Pop Bookmark (see <a href="ch08s04.htm#sect_navigation_12313_69846">Symbol Navigation</a>). A file is considered visited if it is opened as a result of a symbol navigation or search operation, not modified, and subsequently navigated away from. An option is available to automatically close these visited files. To access the <span><strong class="guilabel">Automatically close visited files</strong></span> option, from the main menu, click <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options</strong></span>, then expand <span><strong class="guilabel">Editing</strong></span> and select <span><strong class="guilabel">Bookmarks</strong></span>. You can enable the option or you can choose to be prompted to close each time you navigate away from a visited file.</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_navigation_12313_1007302"></a>
          <a class="indexterm" name="sect_navigation_D57B30A0_B98A"></a>Navigating Between Multiple Instances</h5></div></div></div><p class="NormalText">If more than one instance of the definition or reference is found, the <a href="ch12s03.htm#sect_options_menuanddialogs_14207_17589">Select Symbol Dialog</a> is displayed, from which you can select the instance to navigate to. To go to the next occurrence, press <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">G</strong></span> (<span><strong class="guimenu">Search </strong></span> &#8594; <span><strong class="guimenuitem">Next Occurrence</strong></span> or <span><strong class="command">find_next</strong></span> command). To go to the previous occurrence, press <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">G</strong></span> (<span><strong class="guimenu">Search </strong></span> &#8594; <span><strong class="guimenuitem">Previous Occurrence</strong></span> or <span><strong class="command">find_prev</strong></span> command).</p><p class="NormalText">Alternatively, press <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Down</strong></span> (<span><strong class="command">next_tag</strong></span> command) or <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Up</strong></span> (<span><strong class="command">prev_tag</strong></span> command) to place the cursor on the next or previous symbol definition.</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_navigation_12313_1007312"></a>
          <a class="indexterm" name="sect_navigation_BC2B0B79_1E27"></a>Using the Find Symbol Tool Window</h5></div></div></div><p class="NormalText">The <a href="ch12s03.htm#sect_search_menuanddialogs_13987_10669">Find Symbol Tool Window</a> (<span><strong class="guimenu">Search </strong></span> &#8594; <span><strong class="guimenuitem">Find Symbol</strong></span> or <span><strong class="command">gui_push_tag</strong></span> command) is used to locate symbols (tags) which are declared or defined in your code. It allows you to search for symbols by name using either a regular expression, substring, or fast prefix match. See <a href="ch12s03.htm#sect_search_menuanddialogs_13987_10669">Find Symbol Tool Window</a> for descriptions of the options that are available.</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_navigation_12313_1007317"></a>
          <a class="indexterm" name="sect_navigation_F696CC04_6588"></a>
          <a class="indexterm" name="sect_navigation_C666D159_EAA4"></a>
          <a class="indexterm" name="sect_navigation_B26C9239_7930"></a>More Symbol Navigation Methods</h5></div></div></div><p class="NormalText">There are several other methods for navigating to symbols:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">The <a href="ch08s05.htm#sect_symbolbrowsing_12907_96273">Symbols Tool Window</a> shows the symbols for all tag files. Right-click in the tool window and select <span><strong class="guimenu">Find Tag</strong></span> to search for a specific symbol. You can also use the <span><strong class="command">cb_find</strong></span> command to find the symbol under the cursor and display it in the Symbols tool window.</p></li><li><p class="NormalText">At the SlickEdit® command line, use the <span><strong class="command">f</strong></span> command and completion keys (<span><strong class="keycap">Space</strong></span> and <span><strong class="keycap">?</strong></span>) to enter a tag name. For example, if tagging the C run-time library, type <span><strong class="command">f str?</strong></span> on the command line for a list of tag names starting with "str" (such as <span><strong class="command">strcpy</strong></span>, <span><strong class="command">strcmp</strong></span>, etc.).</p></li><li><p class="NormalText">To navigate to a Slick-C® symbol, you can use the 
              <span><strong class="command">fp</strong></span> command (a shortcut for <span><strong class="command">find_proc</strong></span>). If editing a 
              Slick-C macro, then enter the <span><strong class="command">push_tag</strong></span> command (<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Dot</strong></span>) to find the symbol at 
              the cursor. The <span><strong class="command">push_tag</strong></span> command actually calls the 
              <span><strong class="command">find_proc</strong></span> command with the symbol name at the cursor to perform the 
              task.</p></li></ul></div></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_navigation_12313_1007390"></a>
        <a class="indexterm" name="sect_navigation_2AA0CF0F_DFC3"></a>
        <a class="indexterm" name="sect_navigation_AF40BF89_CCE1"></a>
        <a class="indexterm" name="sect_navigation_4A3CD53F_2EF0"></a>Navigating Between Words</h4></div></div></div><p class="NormalText">To navigate between words, use the <span><strong class="command">next_word</strong></span> (<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Right</strong></span>) and 
        <span><strong class="command">prev_word</strong></span> (<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Left</strong></span>) commands. The <span><strong class="command">next_word</strong></span> command moves the 
        cursor to the beginning of the next word. The <span><strong class="command">prev_word</strong></span> command moves the 
        cursor to the beginning of the previous word.</p><p class="NormalText">A word is determined by the <span><strong class="guilabel">Word chars</strong></span> value 
        you set for the programming language (<span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Languages </strong></span> &#8594; <span><strong class="guimenuitem">[Language Category] </strong></span> &#8594; <span><strong class="guimenuitem">[Language] </strong></span> &#8594; <span><strong class="guimenuitem">General</strong></span>). For C, C++, and 
        Java this is set to <span><strong class="command">A-Za-z0-9_$</strong></span> by default. The <span><strong class="command">next_word</strong></span> 
        command, for example, will skip over any contiguous characters from that set.</p><p class="NormalText">You can specify whether the cursor moves to the beginning or the end of the next/previous word. Click <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Editing </strong></span> &#8594; <span><strong class="guimenuitem">General</strong></span>, then set the <span><strong class="guilabel">Next word style</strong></span> to <span><strong class="guilabel">Begin</strong></span> or <span><strong class="guilabel">End</strong></span>. This affects both <span><strong class="command">next_word</strong></span> and <span><strong class="command">prev_word</strong></span> commands.</p><p class="NormalText">If you have enabled subword navigation (see <a href="ch08s04.htm#sect_navigation_38974_17486">Subword Navigation</a>), the word navigation commands will behave like their 
        subword navigation counterparts. You can still perform regular word navigation using the "full" 
        word commands: <span><strong class="command">next_full_word</strong></span>, <span><strong class="command">prev_full_word</strong></span>, 
        <span><strong class="command">select_full_word</strong></span>, <span><strong class="command">copy_full_word</strong></span>, 
        <span><strong class="command">cut_full_word</strong></span>, <span><strong class="command">delete_full_word</strong></span>, and 
        <span><strong class="command">delete_prev_full_word</strong></span>.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_navigation_38974_17486"></a>
        <a class="indexterm" name="sect_navigation_22192_40630"></a>
        <a class="indexterm" name="sect_navigation_42207_41674"></a> Subword Navigation</h4></div></div></div><p class="NormalText">Subword navigation provides the capability to navigate within a 
        word, stopping at capitalized letters or letters following common dividers like underscore or 
        dash. If the target word does not contain any subwords, then the subword commands behave like 
        their word navigation counterparts.</p><p class="NormalText">You can configure SlickEdit to use subword navigation instead of 
        the regular word navigation by selecting <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Editing </strong></span> &#8594; <span><strong class="guimenuitem">Cursor Movement</strong></span> and setting 
        <span><strong class="guilabel">Subword Navigation</strong></span> to <span><strong class="guilabel">True</strong></span>. When this option is on, 
        you can still perform "full" word navigation using the <span><strong class="command">_full_word</strong></span> commands. 
         See <a href="ch08s04.htm#sect_navigation_12313_1007390">Navigating Between Words</a> for more information.</p><p class="NormalText">The following subword navigation commands are provided. For convenience, 
        you can bind them to a key sequence using <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Key Bindings</strong></span> You can also use the 
        <span><strong class="guilabel">Key Bindings</strong></span> screen to search for subword commands by entering "subword" in 
        the <span><strong class="guilabel">Search by command</strong></span> field. Then you can view further documentation on each 
        command.</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText"><span><strong class="command">next_subword</strong></span> - Moves the cursor to the next 
            subword.</p></li><li><p class="NormalText"><span><strong class="command">prev_subword</strong></span> - Moves the cursor to the 
            previous subword.</p></li><li><p class="NormalText"><span><strong class="command">select_subword</strong></span> - Selects the next subword.</p></li><li><p class="NormalText"><span><strong class="command">copy_subword</strong></span> - Copies the next subword to the 
            clipboard.</p></li><li><p class="NormalText"><span><strong class="command">cut_subword</strong></span> - Cuts the next subword, putting 
            it in the clipboard.</p></li><li><p class="NormalText"><span><strong class="command">delete_subword</strong></span> - Deletes the next subword 
            without putting it in the clipboard.</p></li><li><p class="NormalText"><span><strong class="command">delete_prev_subword</strong></span> - Deletes the previous 
            subword without putting it in the clipboard.</p></li></ul></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_navigation_12313_98249"></a>
        <a name="sect_navigation_12313_1007328"></a>
        <a class="indexterm" name="sect_navigation_12697320_4245"></a>
        <a class="indexterm" name="sect_navigation_03D6A360_069F"></a>Begin/End Structure Matching</h4></div></div></div><p class="NormalText">Begin/End Structure Matching moves the cursor from the beginning of a code structure to the end, or vice versa. This works for languages using curly braces "{ }", "begin" and "end", or any other defined begin/end pairs.</p><p class="NormalText">To place the cursor on the opposite end of the structure when the cursor is on a begin or end keyword pair, press <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">]</strong></span> (<span><strong class="command">find_matching_paren</strong></span> command or from the menu click <span><strong class="guimenu">Search </strong></span> &#8594; <span><strong class="guimenuitem">Go to Matching Parenthesis</strong></span>). The <span><strong class="command">find_matching_paren</strong></span> command supports matching parenthesis pairs { },[ ] and ( ).</p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="tip" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Tip</h3><p class="CellBody"> For Python, SlickEdit® supports the matching of the colon (:) token and the end of context. See <a href="ch09s09.htm#sect_python_12177_74012">Begin/End Structure Matching for Python</a> for more information.</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_navigation_12313_1007332"></a>
          <a class="indexterm" name="sect_navigation_DE872815_4424"></a>
          <a class="indexterm" name="sect_navigation_5F1EF042_41B1"></a>Viewing and Defining Begin/End Pairs</h5></div></div></div><p class="NormalText">Use the language-specific <span><strong class="guilabel">General</strong></span> options screen to view or define the begin/end pairs for any language. To access this dialog, from the main menu, click <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Languages</strong></span>, expand your language category and language, then select <span><strong class="guimenu">General</strong></span>.</p><p class="NormalText">In the <span><strong class="guilabel">Begin/end pairs</strong></span> text field, specify the pairs in a format similar to a regular expression.</p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Note</h3><p class="CellBody"> This text box is unavailable (dimmed) for languages that have special begin/end matching built-in.</p></div><p class="NormalText">The examples below illustrate the syntax for defining the begin/end 
          pairs. The begin and end pair matching option is case-sensitive by default. Append 
          <code class="code">";I"</code> (a semicolon followed by an upper-case i) to ignore case.</p><div class="sect5" lang="en"><div class="titlepage"><div><div><h6 class="title"><a name="section_48541e0a-b78a-4727-820f-1dcb964cd424"></a>Example 1 </h6></div></div></div><pre class="programlisting">(begin),(case)|(end);I</pre><p class="NormalText">The above begin/end pairs are for the Pascal language. The Pascal language requires a more sophisticated expression. This expression indicates the keywords <span><strong class="command">begin</strong></span> or <span><strong class="command">case</strong></span> start a block and the keyword <span><strong class="command">end</strong></span> terminates the block. The <span><strong class="keycap">,</strong></span> (comma) is used to specify multiple begins or multiple ends. The <span><strong class="command">| </strong></span>operator is used to separate begins from ends.</p></div><div class="sect5" lang="en"><div class="titlepage"><div><div><h6 class="title"><a name="section_e275adf4-96a2-4650-9edb-d5f3e9ff9cab"></a>Example 2 </h6></div></div></div><pre class="programlisting">(#ifdef),(#ifndef),(#if)|(#endif)</pre><p class="NormalText">The above pairs are for the C language. The C language has the added complication that <span><strong class="command">#if</strong></span> is a sub-string of <span><strong class="command">#ifdef</strong></span>. Due to the implementation of begin/end matching, <span><strong class="command">#ifdef</strong></span> must appear before <span><strong class="command">#if</strong></span>.</p><p class="NormalText">More settings for begin/end pairs can be found on the <span><strong class="guilabel">[</strong></span><span class="emphasis"><em>Language</em></span><span><strong class="guilabel">] Formatting Options</strong></span> screen (<span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Languages </strong></span> &#8594; <span><strong class="guimenuitem">[Language Category] </strong></span> &#8594; <span><strong class="guimenuitem">[Language]</strong></span>). See <a href="ch12s11.htm#sect_options_menuanddialogs_14207_90298">Language-Specific Formatting Options</a> for more information.</p></div></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_navigation_12313_1011864"></a>
          <a class="indexterm" name="sect_navigation_E5C0BC53_80F7"></a>
          <a class="indexterm" name="sect_navigation_3C0B3161_9BC4"></a>
          <a class="indexterm" name="sect_navigation_12FA537B_E0B8"></a>Setting the Paren Match Style</h5></div></div></div><p class="NormalText">As you type a closing parenthesis, highlight and matching options are available. To specify these options, from the main menu, click <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options</strong></span>, expand <span><strong class="guimenu">Editing</strong></span>, then click <span><strong class="guimenu">General</strong></span> and set the value of the <span><strong class="guilabel">Parenthesis matching style</strong></span> option. </p><p class="NormalText">The <span><strong class="guilabel">Highlight</strong></span> style option temporarily block-selects the text within the parenthesis pair. The <span><strong class="guilabel">Cursor to Begin Pair</strong></span> style option temporarily places the cursor on the matching begin parenthesis. </p><p class="NormalText">Select <span><strong class="guilabel">Highlight matching blocks</strong></span> to automatically highlight the corresponding parenthesis, brace, bracket, or begin/end word pairs under the cursor. To customize the highlighting color, from the main menu, click <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Appearance </strong></span> &#8594; <span><strong class="guimenuitem">Colors</strong></span>, and select the <span><strong class="guilabel">Block Matching</strong></span> screen element. To adjust the delay in milliseconds before the highlighting is updated, go to <span><strong class="guimenu">Macro </strong></span> &#8594; <span><strong class="guimenuitem">Set Macro Variable</strong></span> and modify the variable <span><strong class="command">def_match_paren_idle</strong></span>. See <a href="ch04s06.htm#sect_fontsandcolors_13325_90477">Setting Colors for Screen Elements</a> and <a href="ch13s04.htm#sect_configurationvariables_13930_34957">Setting/Changing Configuration Variables</a> for more information.</p></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_navigation_12313_1012021"></a>
        <a class="indexterm" name="sect_navigation_50BDB5AC_64C6"></a>
        <a class="indexterm" name="sect_navigation_8C5BFD60_68B5"></a>
        <a class="indexterm" name="sect_navigation_BB612609_F3F4"></a>Navigating in Statements and Tags</h4></div></div></div><p class="NormalText">The following navigation commands are available for languages that support statement tagging: </p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
            <span><strong class="command">next_tag</strong></span>
            <span class="bold"><strong>/</strong></span>
            <span><strong class="command">prev_tag</strong></span> - Places the cursor on the next/previous tag definition, skipping any tags filtered out by the Defs tool window.</p></li><li><p class="NormalText">
            <span><strong class="command">next_proc</strong></span>
            <span class="bold"><strong>/</strong></span>
            <span><strong class="command">prev_proc</strong></span> - Places the cursor on the next/previous function heading.</p></li><li><p class="NormalText">
            <span><strong class="command">find_tag</strong></span> - Displays a list of tags in the <a href="ch12s03.htm#sect_options_menuanddialogs_14207_17589">Select Symbol Dialog</a>, allowing you to pick the tag to which you want to navigate.</p></li><li><p class="NormalText">
            <span><strong class="command">goto_tag</strong></span> - Prompts for a procedure tag name and places the cursor on the definition of the procedure name specified. This command is available in GNU Emacs emulation mode only.</p></li><li><p class="NormalText">
            <span><strong class="command">end_tag</strong></span> - Places the cursor at the end of the current symbol definition. This is useful if you are in the middle of a large function or class definition and you want to jump to the end of it. In a class definition in C++, the end is where inline function definitions are usually stored.</p></li><li><p class="NormalText">
            <span><strong class="command">end_proc</strong></span> - Moves the cursor to the end of the current procedure.</p></li><li><p class="NormalText">
            <span><strong class="command">next_statement</strong></span>
            <span class="bold"><strong>/</strong></span>
            <span><strong class="command">prev_statement</strong></span> - Moves the cursor to the beginning of the next/previous statement.</p></li><li><p class="NormalText">
            <span><strong class="command">begin_statement</strong></span>
            <span class="bold"><strong>/</strong></span>
            <span><strong class="command">end_statement</strong></span> - Places the cursor at the beginning/end of the current statement.</p></li><li><p class="NormalText">
            <span><strong class="command">next_sibling</strong></span>
            <span class="bold"><strong>/</strong></span>
            <span><strong class="command">prev_sibling</strong></span> - Moves the cursor to the beginning of the next/previous sibling. These are similar to the <span><strong class="command">next_statement</strong></span>/<span><strong class="command">prev_statement</strong></span> commands except they stay at one level of nesting.</p></li><li><p class="NormalText">
            <span><strong class="command">goto_parent</strong></span> - Moves the cursor to the beginning of the enclosing statement or symbol scope relative to the current cursor position.</p></li><li><p class="NormalText">
            <span><strong class="command">begin_statement_block</strong></span>
            <span><strong class="command">/</strong></span>
            <span><strong class="command">end_statement_block</strong></span> - Moves the cursor to the beginning/end of the current statement block.</p></li></ul></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_navigation_79921_36798"></a>Navigating with S-expressions</h4></div></div></div><p class="NormalText">S-expressions are symbolic expressions. They can be a single symbol 
        or a set of symbols contained in a structure. First popularized in Lisp and Emacs, SlickEdit 
        provides several navigation commands using S-expressions. </p><p class="NormalText">These commands are particularly useful in XML and HTML, where the 
        structures created by begin and end tags are treated as S-expressions. These commands allow you 
        to skip over or drill down into text bounded by tags.</p><p class="NormalText">The following commands are available, with their default keybindings 
        in CUA emulation:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
            <span><strong class="command">prev_sexp</strong></span> - Moves to the previous S-expression 
            (<span><strong class="keycap">Ctrl </strong></span>+<span><strong class="keycap">Alt 
            </strong></span>+<span><strong class="keycap">Left</strong></span>).</p></li><li><p class="NormalText">
            <span><strong class="command">next_sexp</strong></span> - Moves to the next S-expression 
            (<span><strong class="keycap">Ctrl </strong></span>+<span><strong class="keycap">Alt 
            </strong></span>+<span><strong class="keycap">Right</strong></span>).</p></li><li><p class="NormalText">
            <span><strong class="command">backward_up_sexp</strong></span> - Navigates to the start of the 
            immediately enclosing block (<span><strong class="keycap">Ctrl </strong></span>+<span><strong class="keycap">Alt 
            </strong></span>+<span><strong class="keycap">Up</strong></span>).</p></li><li><p class="NormalText">
            <span><strong class="command">forward_down_sexp</strong></span> - Drills down into the next block 
            (<span><strong class="keycap">Ctrl </strong></span>+<span><strong class="keycap">Alt 
            </strong></span>+<span><strong class="keycap">Down</strong></span>).</p></li><li><p class="NormalText">
            <span><strong class="command">select_prev_sexp</strong></span> - Extends a character selection 
            from the cursor to the start of the previous S-expression (<span><strong class="keycap">Ctrl </strong></span>+<span><strong class="keycap">Alt </strong></span>+<span><strong class="keycap">Shift 
            </strong></span>+<span><strong class="keycap">Left</strong></span>).</p></li><li><p class="NormalText">
            <span><strong class="command">select_next_sexp</strong></span> - Extends a character selection 
            from the cursor to the start of the next S-expression (<span><strong class="keycap">Ctrl </strong></span>+<span><strong class="keycap">Alt </strong></span>+<span><strong class="keycap">Shift 
            </strong></span>+<span><strong class="keycap">Right</strong></span>).</p></li><li><p class="NormalText">
            <span><strong class="command">cut_prev_sexp</strong></span> - Deletes the S-expression to the left 
            of the cursor and copies it to the clipboard (<span><strong class="keycap">Ctrl 
            </strong></span>+<span><strong class="keycap">Alt </strong></span>+<span><strong class="keycap">Backspace</strong></span>).</p></li></ul></div></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_navigation_12313_95303"></a>
      <a name="sect_navigation_12313_1007370"></a>
      <a class="indexterm" name="sect_navigation_7219A68A_1D03"></a>
      <a class="indexterm" name="sect_navigation_9D223F6D_BB39"></a>Cursor Navigation</h3></div></div></div><p class="NormalText">These cursor navigation methods pertain to simple cursor movement within 
      files. We recommend creating key bindings for commands that you use frequently (if a key binding 
      doesn't already exist by default). See also <a href="ch08s02.htm#sect_bufferseditorwindows_14042_90222">Switching Between Buffers or Windows</a> for 
      information about navigating between buffers and editor windows.</p><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_navigation_12313_1007372"></a>
        <a class="indexterm" name="sect_navigation_72F1B874_B79B"></a>
        <a class="indexterm" name="sect_navigation_26E5AE22_B838"></a>Navigating in Pages and Files</h4></div></div></div><p class="NormalText">The following commands control cursor navigation in pages and files:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText"><span><strong class="command">cursor_right</strong></span> (<span><strong class="keycap">Right Arrow</strong></span>) - Moves 
            the cursor one column to the right. If the cursor is at the end of the line, this command 
            will move the cursor to the next line depending on the value for <span><strong class="guilabel">Cursor right/left 
            wraps to next/previous line</strong></span> (<span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Editing </strong></span> &#8594; <span><strong class="guimenuitem">Cursor Movement</strong></span>).
            </p></li><li><p class="NormalText"><span><strong class="command">cursor_left</strong></span> (<span><strong class="keycap">Left Arrow</strong></span>) - 
            Moves the cursor one column to the left. If the cursor is at the beginning of the line, this 
            command will move the cursor to the previous line depending on the value for <span><strong class="guilabel">Cursor 
            right/left wraps to next/previous line</strong></span> (<span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Editing </strong></span> &#8594; <span><strong class="guimenuitem">Cursor Movement</strong></span>).</p></li><li><p class="NormalText"><span><strong class="command">cursor_up</strong></span> (<span><strong class="keycap">Up Arrow</strong></span>) - Moves 
            the cursor to the previous line. If the cursor is located in a column that is beyond the last 
            column of the previous line, the cursor position is controlled by <span><strong class="guilabel">Cursor up/down 
            places cursor in virtual space</strong></span> (<span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Editing </strong></span> &#8594; <span><strong class="guimenuitem">Cursor Movement</strong></span>).</p></li><li><p class="NormalText"><span><strong class="command">cursor_down</strong></span> (<span><strong class="keycap">Down Arrow</strong></span>) - 
            Moves the cursor to the next line. If the cursor is located in a column that is beyond the 
            last column of the next line, the cursor position is controlled by <span><strong class="guilabel">Cursor up/down 
            places cursor in virtual space</strong></span> (<span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Editing </strong></span> &#8594; <span><strong class="guimenuitem">Cursor Movement</strong></span>).</p></li><li><p class="NormalText">
            <span><strong class="command">page_up</strong></span>
            <span class="bold"><strong>/</strong></span>
            <span><strong class="command">page_down</strong></span> (<span><strong class="keycap">PgUp</strong></span>/<span><strong class="keycap">PgDn</strong></span>) - Moves the cursor to the previous/next page of text.</p></li><li><p class="NormalText">
            <span><strong class="command">page_left</strong></span>
            <span class="bold"><strong>/</strong></span>
            <span><strong class="command">page_right</strong></span> - Changes the left edge scroll position by half the window width to the left/right. The cursor is moved half the window width to the left/right as well.</p></li><li><p class="NormalText">
            <span><strong class="command">top_of_window</strong></span>
            <span class="bold"><strong>/</strong></span>
            <span><strong class="command">bottom_of_window</strong></span>
            <span><strong class="command"></strong></span>(<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">PgUp</strong></span>/<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">PgDn</strong></span>) - Places the cursor at the top/bottom of the current editor window.</p></li><li><p class="NormalText">
            <span><strong class="command">top_of_buffer</strong></span>
            <span class="bold"><strong>/</strong></span>
            <span><strong class="command">bottom_of_buffer</strong></span> (<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Home</strong></span>/<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">End</strong></span>) - The <span><strong class="command">top_of_buffer</strong></span> command places the cursor at the first line and first column of the current buffer. The <span><strong class="command">bottom_of_buffer</strong></span> command places the cursor at the end of the last line of the current buffer. If the option <span><strong class="guilabel">Preserve column on top/bottom</strong></span> is enabled (<span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Editing </strong></span> &#8594; <span><strong class="guimenuitem">General</strong></span>), the cursor is placed at the first line/last line of the buffer and the column position is unchanged.</p></li></ul></div><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="tip" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Tip</h3><p class="CellBody"> There is an option to make <span><strong class="command">top_of_buffer</strong></span><span class="bold"><strong>/</strong></span><span><strong class="command">bottom_of_buffer</strong></span> push a bookmark, providing quick navigation between the top/bottom of the buffer and the previous location. See <a href="ch08s15.htm#sect_bookmarks_12725_40145">Pushed Bookmark Options</a> for more information.</p></div><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
            <span><strong class="command">top_left_of_window</strong></span>
            <span class="bold"><strong>/</strong></span>
            <span><strong class="command">bottom_left_of_window</strong></span> - Places the cursor at the top left/bottom right of the current editor window.</p></li></ul></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_navigation_12313_48366"></a>
        <a name="sect_navigation_12313_1007394"></a>
        <a class="indexterm" name="sect_navigation_F3E63072_5BA5"></a>
        <a class="indexterm" name="sect_navigation_52737722_B16C"></a>Navigating to a Specific Line</h4></div></div></div><p class="NormalText">To view and place the cursor on a specific line number, from the main menu, click <span><strong class="guimenu">Search </strong></span> &#8594; <span><strong class="guimenuitem">Go to Line</strong></span>. Enter the line number and click <span><strong class="guibutton">OK</strong></span>. Alternatively, you can use the <span><strong class="command">goto_line</strong></span> command in the syntax <span><strong class="command">goto_line </strong></span><span class="emphasis"><em>linenumber</em></span>.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_navigation_12313_75610"></a>
        <a name="sect_navigation_12313_1007400"></a>
        <a class="indexterm" name="sect_navigation_19DF0A18_6CDD"></a>
        <a class="indexterm" name="sect_navigation_EEFF1586_1B8C"></a>
        <a class="indexterm" name="sect_navigation_4408067C_EB52"></a>
        <a class="indexterm" name="sect_navigation_E4AEDA23_57E7"></a>
        <a class="indexterm" name="sect_navigation_C10E50B2_0417"></a>
        <a class="indexterm" name="sect_navigation_FD10A504_8E8A"></a>Navigating to an Offset</h4></div></div></div><p class="NormalText">To seek to a byte offset in the current buffer, from the main menu click <span><strong class="guimenu">Search </strong></span> &#8594; <span><strong class="guimenuitem">Go to Offset</strong></span>, or use the <span><strong class="command">gui_seek</strong></span> command. This function is the same as the C <span><strong class="command">lseek</strong></span> function. However, if you have opened the file with tab expansion, the seek position on disk may be different.</p><p class="NormalText">When the Seek dialog appears, enter the position to seek for. You may specify a C syntax expression. In addition, you may prefix the expression with a plus or minus sign (+ or -) to specify a relative seek position.</p><p class="NormalText">Some examples are:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
            <span class="bold"><strong>0x10+10</strong></span> - Seek to offset 26</p></li><li><p class="NormalText">
            <span class="bold"><strong>+8+4</strong></span> - Seek to current offset + 12</p></li><li><p class="NormalText">
            <span class="bold"><strong>-8+4</strong></span> - Seek to current offset - 12</p></li></ul></div><p class="NormalText">Select the <span><strong class="guilabel">Decimal</strong></span> option to enter the seek position in decimal number format. Select the <span><strong class="guilabel">Hex</strong></span> option to enter the seek position in hexadecimal number format. You can type an "x" as the first character in the <span><strong class="guilabel">Position to seek for</strong></span> text box and this option will automatically be selected.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_navigation_12313_16520"></a>
        <a name="sect_navigation_12313_1011927"></a>
        <a class="indexterm" name="sect_navigation_F8B559AA_B087"></a>
        <a class="indexterm" name="sect_navigation_5A0A2859_9168"></a>Navigating to URLs</h4></div></div></div><p class="NormalText">
        SlickEdit® treats URLs in editor windows as hyperlinks, making them easy to identify and open in a Web browser from within your code. By default, a string is interpreted as a URL if it begins with one of the following URI schemes, or, URL types (including the colon and slashes):</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
            <code class="filename">file://</code>
          </p></li><li><p class="NormalText">
            <code class="filename">ftp://</code>
          </p></li><li><p class="NormalText">
            <code class="filename">http://</code>
          </p></li><li><p class="NormalText">
            <code class="filename">https://</code>
          </p></li></ul></div><p class="NormalText">URLs are underlined. You can navigate to a link by hovering over it with 
        the mouse and using <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Click</strong></span> (or <span><strong class="keycap">Command</strong></span>+<span><strong class="keycap">Click</strong></span> on the Mac). The link 
        opens in a new Web browser window, or the current browser window if one is already open. The 
        <code class="filename">file://</code> URI scheme is handled differently (see <a href="ch08s04.htm#sect_navigation_12313_30943">Handling File URLS</a> below). </p><p class="NormalText">When using the mouse to hover over an <code class="filename">http://</code> link, click the green arrow to open the source code in SlickEdit.</p><div class="mediaobject"><img src="Resources/urllink.png"></div><p class="NormalText">The URI Schemes node of the Options dialog lets you specify the recognized URI schemes, and makes it easy to extend this feature. For example, you may want to add a <code class="filename">mailto</code> URI scheme so that e-mail URLs are recognized. To access these options, from the main menu, click <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options</strong></span>, expand <span><strong class="guilabel">Network &amp; Internet Options</strong></span>, then select <span><strong class="guilabel">URI Schemes</strong></span>. See <a href="ch12s11.htm#sect_options_menuanddialogs_14207_74859">URI Scheme Options</a> for more information.</p><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_navigation_12313_30943"></a>
          <a name="sect_navigation_12313_1011947"></a>Handling File URLS</h5></div></div></div><p class="NormalText">Files can be designated using the <code class="filename">file://</code> URI scheme. Depending on the file type, a file can be opened in a browser, passed to an application for opening, or executed. How the file is handled depends on the operating system and the settings in <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Languages </strong></span> &#8594; <span><strong class="guimenuitem">File Extension Manager</strong></span>.</p><p class="NormalText">The File Extension Manager provides two settings to control this behavior:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
              <span><strong class="guilabel">Open Application</strong></span> - Specifies an application to open files with the selected extension.</p></li><li><p class="NormalText">
              <span><strong class="guilabel">Use file association</strong></span> - Overrides the application specified in <span><strong class="guilabel">Open Application</strong></span> and uses the operating system to determine what application to use. This is only applicable to Microsoft Windows operating systems.</p></li></ul></div><p class="NormalText">If an application is specified in the <span><strong class="guilabel">Open Application</strong></span> field, the file will be passed to that application for opening. </p><p class="NormalText">If <span><strong class="guilabel">Use file association</strong></span> is checked, the operating system is used to determine what application to use. This is only applicable on Windows.</p><p class="NormalText">If both fields are left blank, SlickEdit® will use the operating system to determine what application to use. This is the same as if you checked <span><strong class="guilabel">Use file association</strong></span> and is only applicable on Windows.</p><div class="sect5" lang="en"><div class="titlepage"><div><div><h6 class="title"><a name="section_1c3f81e7-3bc2-4f71-83d3-0b9c1eedaa22"></a>Runnable Files</h6></div></div></div><p class="NormalText">A <code class="filename">file://</code> URI scheme can be used to specify a runnable file, like a batch file, script file, or executable. On Windows, the operating system is used to automatically identify runnable files and run them, unless you have specified a value for <span><strong class="guilabel">Open Application</strong></span>.</p><p class="NormalText">On Linux, UNIX, or Mac you have to specify how to run a runnable file by specifying an application or system command in the <span><strong class="guilabel">Open Application</strong></span> field. For example, on Linux you can run a Perl file by specifying the path to the Perl interpreter in <span><strong class="guilabel">Open Application</strong></span>. You also need to include the escape sequence denoting the file name, for example, <span><strong class="command">/usr/bin/perl %f</strong></span>. The <span><strong class="command">%f</strong></span> inserts the full path for the file portion of the URL. If you want to run a binary file you would just specify put <span><strong class="command">%f</strong></span> in the <span><strong class="guilabel">Open Application</strong></span> field.</p></div></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_navigation_12313_1011958"></a>Other URI Schemes</h5></div></div></div><p class="NormalText">You can add additional URI schemes to be treated as links (see <a href="ch12s11.htm#sect_options_menuanddialogs_14207_74859">URI Scheme Options</a>). On Windows, the operating system will determine how to handle the URL. For example, using <code class="filename">ms-help://</code> will open the associated link in MSDN Help. On all other platforms, the link will be sent to the browser.</p><p class="NormalText"></p></div></div></div></div></body></html>
