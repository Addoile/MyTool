<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Dialog Editor</title><link rel="stylesheet" href="slickedit_help.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.71.1"><link rel="start" href="index.htm" title="Welcome to SlickEdit 2013"><link rel="up" href="ch14.htm" title="Chapter 14.  Slick-C® Macro Programming Guide"><link rel="prev" href="ch14s17.htm" title="Error Handling and the rc Variable"><link rel="next" href="ch14s19.htm" title="Creating Dialog Boxes"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><p class="HeaderText"><a href="index.htm#contents">Contents</a> : <a href="ix01.htm">Index</a> : <a href="search.htm">Search</a></p><hr><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="slick_c_dialogeditor_12838_41689"></a>
    <a name="slick_c_dialogeditor_12838_1003628"></a>Dialog Editor</h2></div></div></div><p class="NormalText">The dialog editor is used to create dialog boxes: It provides controls to build the text boxes, combo boxes, radio buttons, image controls, menu items, and forms for a dialog box.</p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="slick_c_dialogeditor_12838_1003630"></a>Microsoft Visual Basic and Slick-C®</h3></div></div></div><p class="NormalText">Creating event-driven dialog boxes (see <a href="ch14s13.htm">Event-Driven Dialog Boxes</a>) in Slick-C is similar to Microsoft Visual Basic except that the language has C++-style syntax. The following list contains some of the differences between Slick-C and Microsoft Visual Basic:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">When an event is sent to a control or dialog box, the object receiving the event MUST be the active object (not necessarily the same as the system focus). This is a major difference between Slick-C and Microsoft Visual Basic. If a button control receives an event and executes a statement such as this: <span><strong class="command">p_caption=New button caption</strong></span>, the caption on the button is changed and NOT the caption for the dialog box.</p></li><li><p class="NormalText">Built-in properties all start with the prefix <span><strong class="command">p_</strong></span> to avoid these keywords from conflicting with their own identifiers.</p></li><li><p class="NormalText">A more general method of object instance referencing is used.</p></li><li><p class="NormalText">Almost all properties that can be accessed at design time can also be accessed at run time. For example, the <span><strong class="command">p_name</strong></span> property for a control or dialog box may be set after the dialog box is displayed.</p></li><li><p class="NormalText">Event tables are used to group event handlers for controls. Event tables in Slick-C are used in a similar fashion to classes in C++.</p></li><li><p class="NormalText">Slick-C has sophisticated and powerful Dialog Box Inheritance Order. For more information, see <span class="bold"><strong><a href="ch14s20.htm#slick_c_clipboardinheritance_13696_94534">Dialog Box Inheritance Order</a></strong></span>.</p></li><li><p class="NormalText">Parent, child, next, and previous (<span><strong class="command">p_parent</strong></span>, <span><strong class="command">p_child</strong></span>, <span><strong class="command">p_next</strong></span>, <span><strong class="command">p_prev</strong></span>) creation order relationships are all maintained when dialog boxes are created.</p></li><li><p class="NormalText">Event tables can be linked together. One event table can inherit the event handlers of another event table. The event table links can be changed at run time.</p></li><li><p class="NormalText">The dialog editor allows event tables to be transferred through the clipboard. Controls from the same or different dialog boxes may reference the same event tables. There is no need for control arrays. For more information, see <span class="bold"><strong></strong></span><a href="ch14s20.htm">Clipboard Inheritance®</a>.</p></li><li><p class="NormalText">Functions can be used as methods that operate on an instance of an object.</p></li></ul></div><p class="NormalText"></p></div></div></body></html>
