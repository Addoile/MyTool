<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Programmable Macros</title><link rel="stylesheet" href="slickedit_help.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.71.1"><link rel="start" href="index.htm" title="Welcome to SlickEdit 2013"><link rel="up" href="ch11.htm" title="Chapter 11.  Macros and Macro Programming"><link rel="prev" href="ch11.htm" title="Chapter 11.  Macros and Macro Programming"><link rel="next" href="ch12.htm" title="Chapter 12.  Menus, Dialogs, and Tool Windows"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><p class="HeaderText"><a href="index.htm#contents">Contents</a> : <a href="ix01.htm">Index</a> : <a href="search.htm">Search</a></p><hr><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="sect_macros_12165_78795"></a>
    <a name="sect_macros_12165_1003671"></a>
    <a class="indexterm" name="sect_macros_0AFC8098_7874"></a>
    <a class="indexterm" name="sect_macros_981D5B98_552F"></a>Programmable Macros</h2></div></div></div><p class="NormalText">The Slick-C® macro programming language is behind most of the actions performed in SlickEdit®. Slick-C functions are mapped to menus, buttons, and keys, and perform the action behind an event. You can use Slick-C to extend the editor's functionality. With Slick-C, you can manipulate buffers; parse strings; navigate buffers and source code; and create and modify menus, dialogs, toolbars, and tool windows. </p><p class="NormalText">For documentation purposes, "programmable macros" is a term used to encompass Slick-C modules, variables, and batch macros. These items are described in detail below.</p><p class="NormalText">This section contains the following topics:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
        <a href="ch11s02.htm#sect_macros_12165_80856">Slick-C® Modules</a>
      </p></li><li><p class="NormalText">
        <a href="ch11s02.htm#sect_macros_12165_99678">Slick-C® Variables (Config Variables)</a>
      </p></li><li><p class="NormalText">
        <a href="ch11s02.htm#sect_macros_12165_40650">Slick-C® Batch Macros</a>
      </p></li><li><p class="NormalText">
        <a href="ch11s02.htm#sect_macros_12165_67064">State File</a>
      </p></li><li><p class="NormalText">
        <a href="ch11s02.htm#sect_macros_12165_11830">Slick-C® Header Files and More Resources</a>
      </p></li></ul></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_macros_12165_80856"></a>
      <a name="sect_macros_12165_1003698"></a>
      <a class="indexterm" name="sect_macros_AE3C7CCE_ED4C"></a>
      <a class="indexterm" name="sect_macros_FA02F71E_6B06"></a>Slick-C® Modules</h3></div></div></div><p class="NormalText">A Slick-C module is a file with the extension <code class="filename">.e</code> that 
      contains Slick-C code. Slick-C modules are the most typical use of Slick-C, used to define 
      functionality that you want to keep loaded, such as user-defined commands. You must compile and 
      load a Slick-C module into the <a href="ch11s02.htm#sect_macros_12165_67064">State File</a> before it can be 
      utilized. When a module is compiled, the Slick-C translator converts the file into byte code, which 
      is saved in a corresponding file with the extension <code class="filename">.ex</code>. To compile and load 
      the module, use the menu item <span><strong class="guimenu">Macro </strong></span> &#8594; <span><strong class="guimenuitem">Load Module</strong></span>. See <a href="ch11s02.htm#sect_macros_12165_58291">Loading and Unloading Slick-C Modules</a> for more information.</p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="tip" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Tip</h3><p class="CellBody">Slick-C modules that are included with SlickEdit are located in the 
        <code class="filename">[SlickEditInstallDir]/macros</code> subdirectory. You can store the macros you write in any 
        directory you like. It is best not to store your macros in the <code class="filename">macros</code> 
        subdirectory, however.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_macros_12165_58291"></a>
        <a name="sect_macros_12165_1003713"></a>
        <a class="indexterm" name="sect_macros_22D0D782_DBF9"></a>
        <a class="indexterm" name="sect_macros_AEBE60C3_5F01"></a>
        <a class="indexterm" name="sect_macros_2BB22EE4_01D9"></a>Loading and Unloading Slick-C® Modules</h4></div></div></div><p class="NormalText">To compile and load a Slick-C module into the <a href="ch11s02.htm#sect_macros_12165_67064">State File</a>, from the main menu, click <span><strong class="guimenu">Macro </strong></span> &#8594; <span><strong class="guimenuitem">Load Module</strong></span>. You can also press <span><strong class="keycap">F12</strong></span> or use the <span><strong class="command">gui_load</strong></span> command on the SlickEdit® command line. The Open dialog is displayed, prompting you for the file to load.</p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Note</h3><p class="CellBody"> The dialog used to open a file depends on whether you are using Smart 
      Open. With Smart Open, you use the Open tool window to browse files and open them. With that 
      off, a standard file browser dialog is displayed. For more information see <a href="ch05s02.htm#sect_workingwithfiles_13027_36250">Opening Files</a>.</p></div><p class="NormalText">To unload a Slick-C module from the <a href="ch11s02.htm#sect_macros_12165_67064">State File</a>, from the main menu, click <span><strong class="guimenu">Macro </strong></span> &#8594; <span><strong class="guimenuitem">Unload Module</strong></span>, or use the <span><strong class="command">gui_unload</strong></span> command.</p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="caution" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Caution</h3><p class="CellBody"></p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">Use caution when unloading modules that are shipped with SlickEdit (standard SlickEdit modules). Unloading a standard module could cause the editor to behave unpredictably.</p></li><li><p class="NormalText">Standard modules are identified by file name. If you load a module with a name that matches a standard SlickEdit module, it will replace the standard module, which (like unloading a standard module), could potentially cause problems.</p></li></ul></div></div></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_macros_12165_99678"></a>
      <a name="sect_macros_12165_1003736"></a>
      <a class="indexterm" name="sect_macros_F55A9741_14EA"></a>
      <a class="indexterm" name="sect_macros_6FA8B689_5ABA"></a>Slick-C® Variables (Config Variables)</h3></div></div></div><p class="NormalText">Slick-C variables are global variables that are persistently stored in the <a href="ch11s02.htm#sect_macros_12165_67064">State File</a>. Because these typically contain user configuration settings, Slick-C variables are also called "configuration variables". Config variables start with the prefix <span class="bold"><strong>def_</strong></span>. See <a href="ch13s04.htm">Configuration Variables</a> for more information. </p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_macros_12165_40650"></a>
      <a name="sect_macros_12165_1003746"></a>
      <a class="indexterm" name="sect_macros_A6B63FE3_3D0A"></a>Slick-C® Batch Macros</h3></div></div></div><p class="NormalText">A Slick-C batch macro is a <code class="filename">.e</code> file that contains a <span><strong class="command">defmain()</strong></span> function. 
      This file cannot be loaded - you must compile and run it from the SlickEdit® command line. Slick-C batch macros 
      are useful for infrequent tasks that do not involve a persistent state. They are different from recorded macros in that they usually perform 
      specific tasks and cannot be bound to a key. An example of a Slick-C batch macro is a file called <code class="filename">autotag.e</code>. This 
      batch macro launches the Create Tag Files for Run-Time Libraries dialog that appears when you run SlickEdit for the first time. 
      See <a href="ch06s02.htm#sect_buildingmanagingtagfiles_14858_58720">Creating Tag Files for Compiler-Specific Libraries</a> for more information.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_macros_12165_67064"></a>
      <a name="sect_macros_12165_1003755"></a>
      <a class="indexterm" name="sect_macros_75E700A2_F390"></a>
      <a class="indexterm" name="sect_macros_B36460A2_FC3B"></a>
      <a class="indexterm" name="sect_macros_5F7EC272_C2BA"></a>State File</h3></div></div></div><p class="NormalText">
      SlickEdit® ships with a system state file that contains default settings. The system state file is only changed or updated when you upgrade. As you make changes to the configuration of the editor or apply customizations, the changes are saved to a user state file, which is a copy of the system state file with user customizations.</p><p class="NormalText">The user state file is located in your <a href="ch13s05.htm#sect_configurationfiles_13203_73239">User Configuration Directory</a>. On Windows, the state file is named <code class="filename">vslick.sta</code>, and on UNIX, <code class="filename">vslick.stu</code>. The file extensions were made different to avoid any confusion between the two, since a Windows state file is not compatible with UNIX, and vice versa. </p><p class="NormalText">The state file is a binary file that stores the following information:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">Loadable <a href="ch11s02.htm#sect_macros_12165_80856">Slick-C® Modules</a>.</p></li><li><p class="NormalText">Slick-C settings such as global options, language-specific options, etc.</p></li><li><p class="NormalText">Slick-C resources such as event tables, dialogs, toolbars, tool windows, menus, bitmaps, and icons.</p></li><li><p class="NormalText">DLL-exported function linkage.</p></li></ul></div><p class="NormalText">The state file does not include DLLs themselves or <a href="ch11s02.htm#sect_macros_12165_40650">Slick-C® Batch Macros</a>.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_macros_12165_11830"></a>
      <a name="sect_macros_12165_1003775"></a>
      <a class="indexterm" name="sect_macros_E884FC2A_A532"></a>Slick-C® Header Files and More Resources</h3></div></div></div><p class="NormalText">Slick-C header files use the <code class="filename">.sh</code> extension. All Slick-C source files #include <code class="filename">slick.sh</code>. </p><p class="NormalText">To learn more about Slick-C functions, from the main menu, click <span><strong class="guimenu">Help </strong></span> &#8594; <span><strong class="guimenuitem">Macro Functions by Category</strong></span>. This will display the Help dialog, with a list of all macro functions organized into categories.</p><p class="NormalText">For information about writing Slick-C, see the <a href="ch14.htm#chap_slickc_11596_999119">Slick-C Macro Programming Guide</a>, which is included in the SlickEdit® 
      Help system and also available as a stand-alone PDF in the <code class="filename">docs</code> installation 
      subdirectory.</p><p class="NormalText"></p></div></div></body></html>
