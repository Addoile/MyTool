<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Chapter 5.  Workspaces, Projects, and Files</title><link rel="stylesheet" href="slickedit_help.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.71.1"><link rel="start" href="index.htm" title="Welcome to SlickEdit 2013"><link rel="up" href="index.htm" title="Welcome to SlickEdit 2013"><link rel="prev" href="ch04s08.htm" title="Setting File Associations"><link rel="next" href="ch05s02.htm" title="Working with Files"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><p class="HeaderText"><a href="index.htm#contents">Contents</a> : <a href="ix01.htm">Index</a> : <a href="search.htm">Search</a></p><hr><div class="chapter" lang="en"><div class="titlepage"><div><div><h2 class="title"><a name="chapter_72a0ca50-0a62-4648-a4db-4ab4ee96d77a"></a>Chapter 5. 
      <a name="chap_workspacesprojectsfiles_14210_999044"></a>
      <a name="chap_workspacesprojectsfiles_14210_98014"></a>Workspaces, Projects, and Files</h2></div></div></div><p class="NormalText">This chapter contains the following topics:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
        <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_53861">Workspaces and Projects</a>
      </p></li><li><p class="NormalText">
        <a href="ch05s02.htm">Working with Files</a>
      </p></li></ul></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="sect_workingwithworkspacesandprojects_15038_53861"></a>
    <a name="sect_workingwithworkspacesandprojects_15038_998341"></a>
    <a class="indexterm" name="sect_workingwithworkspacesandprojects_C0E1B379_2C38"></a>Workspaces and Projects</h2></div></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1003347"></a>
      <a class="indexterm" name="sect_workingwithworkspacesandprojects_98614D54_80DC"></a>
      <a class="indexterm" name="sect_workingwithworkspacesandprojects_BA9B0CDA_2B08"></a>Overview of Workspaces and Projects</h3></div></div></div><p class="NormalText">Workspaces and projects provide a way to organize your work. Much of the power provided by SlickEdit® derives from the information in your projects. So, it's important to set them up correctly.</p><p class="NormalText">A <span class="bold"><strong>workspace</strong></span> defines a set of projects and retains the settings for an editing session. Opening a workspace returns a session to the same state as when you last worked on it, including which files are open, the working directory, and more. To see the auto restore options, click <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Application Options </strong></span> &#8594; <span><strong class="guimenuitem">Auto Restore</strong></span>. The data for each workspace is stored in a text file with the extension <code class="filename">.vpw</code>.</p><p class="NormalText">A <span class="bold"><strong>project</strong></span> defines a set of related files that build and execute as a unit. For each project you can specify the set of files it contains, a working directory, a set of commands to build and execute the project, compiler options, and dependencies between other projects. Files can only be added to projects, not directly to a workspace. A file may belong to multiple projects, and a project may belong to multiple workspaces. The data for each project is stored in a text file with the extension <code class="filename">.vpj</code>.</p><p class="NormalText">When you create a project, you select the project type based on the language and tool chain you are using. A tool chain is the combination of compiler and debugger used. Selecting the right project type is essential to configure SlickEdit to build, run, and debug your program. Once a project type is selected, it is not possible to change it. For more information on this topic, see the section on <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_78367">Managing Projects</a>.</p><p class="NormalText">The number of projects you create in a given workspace depends on the type of program you are creating. Typically, you create a separate project for each build target in your program. In C/C++ you would create a separate project for each DLL or SO and one for each executable. In Java, you might only create a single project.</p><p class="NormalText">If you have a workspace with multiple projects, you can use project dependencies to ensure that projects are built in the correct order (see <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_45387">Defining Project Dependencies</a>). You may find it useful to define an <span class="emphasis"><em>umbrella project</em></span> that depends on all other projects. This provides an easy way to rebuild all of your projects. Even if you have no project that meets this criterion, you can create an empty project for that purpose.</p><p class="NormalText">Files in a workspace are processed by the Context Tagging® feature, building a database of the symbols they contain. This information is used for completions, providing parameter information, navigating from a symbol to its definition or references, and more. The Context Tagging database provides near-instantaneous access to information for which you would otherwise have to search, saving you a great deal of time.</p><p class="NormalText">You can define as many workspaces as you like. For large systems that decompose into multiple subsystems and programs, you can create a separate workspace for each program or subsystem. This helps you manage the complexity by limiting the number of files in your workspace. It also prevents irrelevant information from being presented by Context Tagging when doing symbol lookups.</p><p class="NormalText">SlickEdit has a default workspace that is active before you define a workspace or after you close a workspace. However you can not add projects or files to this workspace. You can open files and edit them, and state will be saved, but using SlickEdit in this way is like using a basic editor and will not provide the full benefit of SlickEdit's symbol analysis. For more information on these features, see <a href="ch06.htm#sect_contexttaggingoverview_14396_11377">Context Tagging Features</a>.</p><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1014021"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_105ED128_5D8F"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_3DDE2A67_126C"></a>Organizing Files</h4></div></div></div><p class="NormalText">SlickEdit® places no restrictions on the location of your files. Your source files do not have to be located in the same directory as your project (<code class="filename">.vpj</code>) or workspace (<code class="filename">.vpw</code>) files. Adding files to a project does not copy the files to a new location. It simply associates those files with the project. Likewise, adding an existing project to a workspace does not copy the project. This gives you a great deal of flexibility to organize your files.</p><p class="NormalText">In general, there are two approaches to organizing your files:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
            <span class="bold"><strong>Single Root Approach</strong></span> - All files are stored under a single root directory. In this approach, the workspace <code class="filename">.vpw</code> file is typically located in the root folder and there is a subfolder for each project. Each project folder contains the project <code class="filename">.vpj</code> file and the source files.</p></li></ul></div><div class="mediaobject"><img src="Resources/singlerootapproach_projectsdiagram.png"></div><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
            <span class="bold"><strong>Multiple Root Approach</strong></span> - No single folder contains all of the workspace files exclusively. Each project may be created in a different directory unrelated to each other, and the workspace <code class="filename">.vpw</code> file may be placed in yet another directory.</p></li></ul></div><div class="mediaobject"><img src="Resources/multiplerootapproach_projectsdiagram.png"></div><p class="NormalText">The single root approach is common when all team members are working with SlickEdit. This organization provides a simple approach to storing your files and facilitates interaction with source control systems. The multiple root approach may be used on complex programs that share framework code with other programs. In this case, you may not want to duplicate the shared code to place it under the root directory for this program.</p><p class="NormalText">A hybrid approach may be used if you have a single root source hierarchy but the whole team is not using SlickEdit. In that situation, they may not want to have the SlickEdit project (<code class="filename">.vpj</code>) and workspace (<code class="filename">.vpw</code>) files checked into the same location as the source files. You can still check out the source tree into a single directory. Then define a separate subdirectory for your workspace and project files. If other team members are using SlickEdit, you can check these files into a different area in source control, allowing you to share them with other SlickEdit users but not interfere with non-SlickEdit users.</p><p class="NormalText">Storing files remotely will have a definite impact on performance since network latency is added to disk latency. If your standards require you to work with remote files, you should still try to set up your workspace locally. SlickEdit reads and writes workspace files frequently, so storing them remotely will reduce performance. Workspaces are just a list of projects, so setting up a local workspace is quick and easy.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1014022"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_120D6562_59C0"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_6058BC75_B1B3"></a>Version Control</h4></div></div></div><p class="NormalText">If the whole team is using SlickEdit®, then project (<code class="filename">.vpj</code>) and workspace (<code class="filename">.vpw</code>) files should be checked in any time they are updated by SlickEdit. That way, all team members will see any new files or projects you add to the workspace. Even if you are the only person using SlickEdit, it's a good idea to check in your project and workspace files. This protects you from loss and allows you to fall back to earlier versions of the program.</p><p class="NormalText">Do not check in the <code class="filename">.vpwhist</code> file. It contains 
        breakpoints, bookmarks, file positions, list of open files--information that is unique to an 
        editing session.</p><p class="NormalText">For more information about using version control with SlickEdit, see <a href="ch10s03.htm">Version Control</a>.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1016637"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_BEFE992A_E0AF"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_A389DAB6_71A5"></a>Add Wildcard</h4></div></div></div><p class="NormalText">If all team members are using SlickEdit® for their development, you will 
        pick up newly added files by getting the latest version of the <code class="filename">.vpj</code> files. 
        If some of your teammates are not using SlickEdit, then you can use
        <span><strong class="guilabel">Add as wildcard
        </strong></span> when adding files to your projects in order to pick up newly added files.
        Each time you start SlickEdit, the wildcards are evaluated and the file list is updated (see 
        <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_88989">Managing Source Files</a> for more 
        information).</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1014023"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_715E4B23_96D0"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_6ABF18D1_825C"></a>Working with Libraries</h4></div></div></div><p class="NormalText">A typical program also makes calls to library routines. A library is a pre-built unit of code providing application-independent functionality. Standard libraries are provided by the compiler, and many programs use third-party libraries. Some development projects have their own libraries. </p><p class="NormalText">Libraries should not be added to your workspace as a project. The key distinction is that libraries are pre-built and will not be edited as part of the development effort. If you have library routines that you plan to edit and build as part of your development, these should be added to your workspace as a project.</p><p class="NormalText">SlickEdit® automatically tags the standard libraries for C/C++, Java, .NET, and COBOL as part of normal installation. This adds the same type of symbolic information for these libraries to the symbol database that is created for your source code. If you skipped auto-tagging or you switch compilers and need to tag those libraries, you can re-run auto-tagging by clicking <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Tag Files</strong></span> and then clicking the <span><strong class="guibutton">Auto Tag</strong></span> button.</p><p class="NormalText">If you use third-party libraries or your own internal libraries, you will want to tag them as well. See <a href="ch06s02.htm#sect_buildingmanagingtagfiles_14858_16171">Creating Language-Specific Tag Files</a> for instructions on how to tag libraries.</p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_workingwithworkspacesandprojects_15038_88177"></a>
      <a name="sect_workingwithworkspacesandprojects_15038_1014024"></a>
      <a class="indexterm" name="sect_workingwithworkspacesandprojects_669A4078_E2AF"></a>
      <a class="indexterm" name="sect_workingwithworkspacesandprojects_80D83BA6_26CC"></a>
      <a class="indexterm" name="sect_workingwithworkspacesandprojects_98EBF89B_0420"></a>Managing Workspaces</h3></div></div></div><p class="NormalText">Workspaces are just a means to aggregate projects and store values from an editing session. They are easy to create, and you can quickly switch from one workspace to another. The Projects tool window allows you to browse the projects within a workspace and the files contained in those projects. It is docked as a tab on the left side of the editor by default and display can be toggled by clicking <span><strong class="guimenu">View </strong></span> &#8594; <span><strong class="guimenuitem">Tool Windows </strong></span> &#8594; <span><strong class="guimenuitem">Projects</strong></span>.</p><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_76283"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1016684"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_0145E3B1_A15B"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_3C958B0D_5E2C"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_CA4E6032_09A2"></a>Opening and Closing Workspaces</h4></div></div></div><p class="NormalText">To open an existing workspace, click <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Open Workspace</strong></span> (<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">O</strong></span> or <span><strong class="command">workspace_open</strong></span> command). Locate the workspace file (<code class="filename">.vpw</code>) and click <span><strong class="guibutton">Open</strong></span>.</p><p class="NormalText">To close a workspace, click <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Close Workspace</strong></span> (<span><strong class="command">workspace_close</strong></span> command). Only one workspace can be open at any given time. If you open another workspace when one is already open, the existing workspace will be automatically closed first.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_79465"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1014025"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_CD05E080_FB0E"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_957C6B72_29BA"></a>Creating Workspaces</h4></div></div></div><p class="NormalText">Workspaces are typically created by creating a new project. At that time you have the option to create a new workspace for this project or add it to the current workspace. If no workspace is open, you can only elect to create a new workspace. If you choose to create a new workspace, your current workspace will be closed and the new one opened. For more information on creating projects, see <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_45918">Creating Projects</a>.</p><p class="NormalText">Creating a workspace without creating a project is useful when you plan to import existing projects or if you want a workspace for editing files that aren't part of a project, like shell script files.</p><p class="NormalText">To create a workspace without creating a project, complete the following steps:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">From the main menu, click <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">New</strong></span> and select the <a href="ch12.htm#sect_file_menuanddialogs_13343_70713">Workspace Tab</a>.</p></li><li><p class="NormalText">Type a value in the <span><strong class="guilabel">Workspace name</strong></span> field.</p></li><li><p class="NormalText">Type the location (or use the <span><strong class="guibutton">Browse</strong></span> button to the right of this field to pick a location) for the new workspace.</p></li></ol></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_64002_13122"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_915A4B6B_BB95"></a>Organizing Workspaces</h4></div></div></div><p class="NormalText">The Organize All Workspaces dialog can be found by
        going to <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Organize All Workspaces...</strong></span>.  This
      dialog enables you to organize the list of workspaces which appear in the
      Project Menu (<span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Organize All Workspaces...</strong></span>).  You can add or
      remove workspaces from the list, as well as sort them into folders.  You
      cannot move or delete the All Workspaces top-level folder.</p><div class="mediaobject"><img src="Resources/organize_all_workspaces.png"></div><p class="NormalText">The dialog features a tree which shows the
      organizational structure of the All Workspaces menu.  The current
      workspace is in bold.  By selecting a workspace in the tree, the
      <span><strong class="guilabel">Caption</strong></span> and <span><strong class="guilabel">Filename</strong></span> fields will
        be filled in.  You can modify the <span><strong class="guilabel">Caption</strong></span> field,
      and yours changes will be reflected in the <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Organize All Workspaces...</strong></span> menu. </p><p class="NormalText">The Organize All Workspaces dialog has the
      following buttons: </p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
            <span><strong class="guilabel">Open Workspace</strong></span> - opens the workspace currently
          selected in the tree. </p></li><li><p class="NormalText">
            <span><strong class="guilabel">Add Workspace...</strong></span> - add a new workspace to the
            list.  New workspaces will be added to the bottom of the top-level
            list.</p></li><li><p class="NormalText">
            <span><strong class="guilabel">Add Folder...</strong></span> - add a new folder to the list.
        This folder will show up as a submenu on the All Workspaces menu.
         You will be prompted for the new folder's name.</p></li><li><p class="NormalText">
            <span><strong class="guilabel">Move to Folder...</strong></span> - move the selected item to
            an existing folder in the tree.  You will be prompted to select the
            folder.</p></li><li><p class="NormalText">
            <span><strong class="guilabel">Move Up</strong></span> - move the selected item up one
              spot.</p></li><li><p class="NormalText">
            <span><strong class="guilabel">Move Down</strong></span> - move the selected item down one
            spot.</p></li><li><p class="NormalText">
            <span><strong class="guilabel">Delete</strong></span> - delete the selected workspace or
            folder from the list.  You will be prompted to delete the workspace
            itself, as well as all associated files.  You cannot delete the
            currently open workspace or the All Workspaces folder.  If you
            delete a folder from the tree, then all workspaces inside that
            folder will be removed from the list as well.  Just as if you had
            deleted the workspace itself from the list, you will be prompted to
            delete the workspace files.</p></li><li><p class="NormalText">
            <span><strong class="guilabel">Close</strong></span> - close the Organize All Workspaces dialog, applying any changes to the Project
        menu.</p></li></ul></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_60825"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1016772"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_83CF27C4_FBCF"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_351CE3F4_0389"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_03207801_565A"></a>Managing Projects within a Workspace</h4></div></div></div><p class="NormalText">To list projects in the current workspace, add or remove projects from the current workspace, or to set the active project, use the Workspace Properties dialog box. The dialog, pictured below, can be accessed from the main menu by clicking <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Workspace Properties</strong></span>. </p><div class="mediaobject"><img src="Resources/workspaceprop11.jpg"></div><p class="NormalText">For more information on using this dialog, see <a href="ch12s05.htm#sect_project_menuanddialogs_13898_80868">Project Dialogs and Tool Windows</a>.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1014027"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_7ED05FC4_CB5F"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_962CFF65_AEA8"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_6FDB4243_2A4F"></a>Sharing Projects between Workspaces</h4></div></div></div><p class="NormalText">A project can be used in more than one workspace. Adding an existing 
        project to a workspace does not copy the project or its source files; it simply creates an 
        association between the two. If you want a local copy of the project, you will need to copy it 
        before you add it to the workspace.</p><p class="NormalText">To share an existing workspace, complete the following steps:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">From the main menu, click <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Workspace Properties</strong></span>.</p></li><li><p class="NormalText">Click <span><strong class="guibutton">Add</strong></span>.</p></li><li><p class="NormalText">Locate the file and click <span><strong class="guibutton">Open</strong></span>.</p></li></ol></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1014028"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_65DFCE2F_5589"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_784EC24D_68B3"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_941932E2_4E3B"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_4BA9584E_8BE7"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_5340ABA0_A955"></a>Working with Third-Party Workspaces</h4></div></div></div><p class="NormalText">SlickEdit® provides compatibility with the following third-party workspaces. Use <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Open Workspace</strong></span> to open these project types.</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
            <span class="bold"><strong>Visual Studio .NET</strong></span> - SlickEdit can directly open <code class="filename">.sln</code> and <code class="filename">.vpw</code> files. Visual Studio 2005 has added many new project types, and not all of these are supported. If you have difficulty opening a Visual Studio 2005 solution or workspace, please contact Product Support. SlickEdit cannot create Visual Studio workspaces. You need to create the workspace in Visual Studio and define the project structure there. Once created, SlickEdit can add files to existing projects.</p></li><li><p class="NormalText">
            <span class="bold"><strong>Tornado</strong></span>
          </p></li><li><p class="NormalText">
            <span class="bold"><strong>Xcode</strong></span>
          </p></li></ul></div></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_workingwithworkspacesandprojects_15038_78367"></a>
      <a name="sect_workingwithworkspacesandprojects_15038_1014029"></a>
      <a class="indexterm" name="sect_workingwithworkspacesandprojects_77181687_7C36"></a>
      <a class="indexterm" name="sect_workingwithworkspacesandprojects_273A934D_4274"></a>Managing Projects</h3></div></div></div><p class="NormalText">Projects are used to hold a set of related files. In compiled 
      languages, a project typically represents the files for a single build unit, either an 
      executable or a library. For interpreted languages, you can use projects to aggregate files into 
      logical groups, though it is common to have a single project. </p><p class="NormalText">The most important thing to remember when working with SlickEdit® projects 
      is to use the correct project type. The project type determines the build options and other 
      behaviors for the project. Once created, the project type cannot be changed. For more information, 
      see <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_45918">Creating Projects</a>.
      </p><p class="NormalText">Once a project has been created, you need to add the source files to it. See <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_88989">Managing Source Files</a> for more information.</p><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1014030"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_DAB5AC01_CC8D"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_292802CF_4084"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_98995_32723"></a>Project Types</h4></div></div></div><p class="NormalText">SlickEdit provides a variety of project types that match commonly 
        available languages, tool chains (defined by the compiler and debugger you are using), and types 
        of programs. Some project types create main programs, starting you off with a fully compilable 
        program.</p><p class="NormalText">The <span><strong class="guilabel">(Other)</strong></span> project type is provided for use when a 
        specific project type does not match the language or tool chain you are using. When you use this 
        project type, you are responsible for configuring all build, run, and debug commands. </p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="warning" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Warning</h3><p class="CellBody">It is not possible to configure the <span><strong class="guilabel">Other</strong></span> project 
          type to work with supported tool chains. For example, if you are using the GNU compiler or 
          debugger, you need to use the <span><strong class="guilabel">GNU C/C++ Wizard</strong></span>. The <span><strong class="guilabel">Other 
          C/C++</strong></span> project type supports the GNU debugger but does not contain the configuration 
          options for the GNU compiler.</p></div><p class="NormalText">You can create a custom project type if none of the existing project types 
        match your development. By doing this you avoid having to redefine the build, run, and debug 
        commands or other project properties each time you set up a new project. You can customize the 
        <span><strong class="guilabel">(Other)</strong></span> project type to create a completely new project type or customize 
        one of the language-specific project types, like Java, to tailor it to your needs. See <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_94488">Creating Custom Project Types</a> for more information.</p><p class="NormalText">The sections below describe the most commonly used project types.</p><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1016889"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_E3EDAE2F_63EF"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_77AC1E6D_130E"></a>GNU C/C++</h5></div></div></div><p class="NormalText">SlickEdit® provides a GNU C/C++ Wizard that leads you through the configuration options for setting up a new GNU C/C++ project. Using this wizard, you can quickly configure a new project that will build, run, and debug. </p><p class="NormalText">SlickEdit prompts you whether this project will build an executable, a shared library, or a static library. You can specify whether this project will use C++, C, or ANSI C. Further, you can select whether to create an empty project, an application with a <span><strong class="command">main()</strong></span> function, or a "Hello World" application. Finally, you are prompted whether to use SlickEdit's build system or to use a makefile.</p><p class="NormalText">SlickEdit detects the presence of GNU tools on your system and configures the new project correspondingly. You can make changes to these settings by clicking <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Project Properties</strong></span>.</p><p class="NormalText">See <a href="ch09s04.htm">C and C++</a> for more information about SlickEdit's C/C++ features.</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1016906"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_A6ADD3FA_717D"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_6D13E5FD_5CEE"></a>Microsoft Visual Studio</h5></div></div></div><p class="NormalText">SlickEdit® cannot create Visual Studio solutions or projects. Visual 
          Studio users should create a solution in Visual Studio, and define the projects it contains 
          using Visual Studio.</p><p class="NormalText">Solutions can be opened in SlickEdit by clicking <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Open Workspace</strong></span>. Navigate to the directory containing the solution and select the <code class="filename">.sln</code> file to be opened. SlickEdit reads the <code class="filename">.sln</code> file and configures the build, run, and debug operations to be performed just as they would in Visual Studio. </p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Note</h3><p class="CellBody"> You can add files to projects using SlickEdit, but any modifications to the workspace or project settings must be performed using Visual Studio. This includes adding any new projects to the workspace.</p></div><p class="NormalText">SlickEdit lists a Visual Studio project type on the <span><strong class="guilabel">New Project</strong></span> 
          dialog, but it will simply warn you that SlickEdit cannot create a project of that type and 
          that you need to do that in Visual Studio. </p><p class="NormalText">For C#, a tutorial is available that describes how to build a simple C# 
          console application with SlickEdit, no Visual Studio required. See <a href="ch13.htm#sect_tutorials_12026_83199">Hello World Tutorial (C#)</a>.</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1016947"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_470C841B_F5C3"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_E6FAB7CF_7303"></a>Other C/C++ Compiler Compatible with GDB (UNIX only)</h5></div></div></div><p class="NormalText">Some compilers, like the Sun&#8482; compiler, are compatible with the GNU tool chain. For these, you should start with the GNU C/C++ project and customize it to use the compiler, debugger, and do builds the way you want. Doing this allows you to launch the integrated debugger using <span><strong class="guimenu">Debug </strong></span> &#8594; <span><strong class="guimenuitem">Step Into</strong></span> rather than <span><strong class="guimenu">Debug </strong></span> &#8594; <span><strong class="guimenuitem">Attach </strong></span> &#8594; <span><strong class="guimenuitem">Debug Other Executable</strong></span>. (See <a href="ch09s04.htm">C and C++</a> for more information about C/C++ features in SlickEdit®.)</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1016964"></a>Other C/C++ Compiler</h5></div></div></div><p class="NormalText">SlickEdit® provides a project type for Borland® C++, both 16- and 
          32-bit for Windows and for Symantec&#8482; C++. These were created for older versions of these 
          products and may not work with the most recent versions. In that case, or when using any other 
          C/C++ compiler, you should select the <span><strong class="guilabel">Other C/C++</strong></span>project type. You will 
          then have to configure the build, compile, link, run, and debug commands for both the <span class="bold"><strong>Release</strong></span> and the <span class="bold"><strong>Debug</strong></span> configurations. 
          (See <a href="ch09s04.htm">C and C++</a> for more information about C/C++ features in 
          SlickEdit.)</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1016975"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_27FE8B6D_0C7C"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_CB264C95_2727"></a>Java</h5></div></div></div><p class="NormalText">SlickEdit® provides a broad selection of Java project types. Select the appropriate choice based on whether you are creating an applet or application and the type of program. SlickEdit detects the installed JDK on your system and configures the build, run, and debug commands. (See <a href="ch09s06.htm">Java</a> for more information about SlickEdit's Java features.)</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_51739_40630"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_02990_41674"></a>
          Perl, PHP, and Python
        </h5></div></div></div><p class="NormalText">SlickEdit has project types for Perl, PHP, and Python. These are needed 
          so that SlickEdit knows how to run and debug programs for these languages. If you are 
          using one of these languages, pick the associated project type when you create a new project.
      </p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1016977"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_D68ADB84_67C2"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_81850_32723"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_70790F3A_F348"></a>Other Dynamic Languages, Including Ruby</h5></div></div></div><p class="NormalText">Dynamic languages do not get compiled. Most of the settings in the 
          project types provided in SlickEdit® are related to compiling and debugging your program. 
          Therefore, SlickEdit has no project types that are specific to these languages. Use the 
          <span><strong class="guilabel">(Other)</strong></span> project type and add your files there. You can configure run and 
          debug commands by clicking <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Project Properties</strong></span> and selecting the <a href="ch12s05.htm#sect_project_menuanddialogs_13898_59558">Tools Tab</a>. Create a custom project type for this 
          language to avoid having to redundantly configure projects each time you create them (see <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_94488">Creating Custom Project Types</a>).</p></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_45918"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1014031"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_A1F6B536_1C78"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_DB8FD608_FE7B"></a>Creating Projects</h4></div></div></div><p class="NormalText">To create a project, complete the steps below. For more information 
        on creating new projects, see <a href="ch12.htm#sect_file_menuanddialogs_13343_86859">Project Tab</a>.</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">From the main menu, select <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">New</strong></span>.</p></li><li><p class="NormalText">Select the type of project that you want. It is critical that you select the 
            correct project type. See <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_78367">Managing Projects</a> for a full discussion of 
            project types.</p></li><li><p class="NormalText">Type the project name.</p></li><li><p class="NormalText">Select a directory location. If the directory does not exist, a prompt appears to create it when you click <span><strong class="guibutton">OK</strong></span>.</p></li><li><p class="NormalText">Type the name of the executable file or output file.</p></li><li><p class="NormalText">Select either <span><strong class="guilabel">Create new workspace</strong></span> or <span><strong class="guilabel">Add to current workspace</strong></span>. If adding this project to the existing workspace, specify whether this project depends on another project in this workspace by checking the <span><strong class="guilabel">Dependency of</strong></span> check box and selecting the depended-on project from the drop-down list.</p></li><li><p class="NormalText">Click <span><strong class="guibutton">OK</strong></span>.</p></li></ol></div><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="tip" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Tip</h3><p class="CellBody"> You can also create a project by importing a makefile. To do this, from the main menu, click <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Open Other Workspace </strong></span> &#8594; <span><strong class="guimenuitem">Makefile</strong></span> (or use the <span><strong class="command">workspace_open_makefile</strong></span> command). See <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_76223">Importing Makefiles</a> for more information.</p></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_94488"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1014034"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_8F3A275A_9432"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_8688A1DE_20E1"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_E0B75D1C_3307"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_83757AC8_8BC9"></a>Creating Custom Project Types</h4></div></div></div><p class="NormalText">If an existing project type does not meet your needs, you can define a new project type or customize an existing one. </p><p class="NormalText">To create a custom project type, complete the following steps:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">Click <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">New</strong></span>, then click the <span><strong class="guibutton">Customize</strong></span> button.</p></li><li><p class="NormalText">
            <a class="indexterm" name="sect_workingwithworkspacesandprojects_903B144B_A1E4"></a>On the Customize Project Types dialog, click the <span><strong class="guibutton">New</strong></span> button.</p></li><li><p class="NormalText">Enter a name for the new custom project type.</p></li><li><p class="NormalText">Select the project type to use as the starting point for your custom 
            project. Use the <span><strong class="guilabel">(Other)</strong></span> project if you are defining a project type 
            for a completely new language/compiler or select one of the existing project types to make 
            modifications.</p></li><li><p class="NormalText">Click <span><strong class="guibutton">OK</strong></span> to bring up the Project Properties dialog.</p></li><li><p class="NormalText">Configure the project settings for this project type. This is similar to the process of configuring a single project, except that you cannot add files to a project type.</p></li><li><p class="NormalText">Click <span><strong class="guibutton">OK</strong></span> when done to save your changes and return to the Customize Project Types dialog. Click <span><strong class="guibutton">OK</strong></span> to return to the New Project dialog. Click <span><strong class="guibutton">Cancel</strong></span> in these dialogs to discard your changes.</p></li></ol></div><p class="NormalText">To customize an existing project type, complete the following steps:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">Click <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">New</strong></span>, then click the <span><strong class="guibutton">Customize</strong></span> button.</p></li><li><p class="NormalText">On the Customize Project Types dialog, select the project type to customize and click the <span><strong class="guibutton">Edit</strong></span> button.</p></li><li><p class="NormalText">Make the changes needed for this project type.</p></li><li><p class="NormalText">Click <span><strong class="guibutton">OK</strong></span> when done to save your changes and return to the Customize Project Types dialog. Click <span><strong class="guibutton">OK</strong></span> to return to the New Project dialog. Click <span><strong class="guibutton">Cancel</strong></span> in these dialogs to discard your changes.</p></li></ol></div><p class="NormalText">Creating or customizing a project type creates a new project template 
        stored in the <code class="filename">usrprjtemplates.vpt</code> file located in your configuration 
        directory. Other team members can use this template by copying the template file into their own 
        configuration directories. If they have also created custom project types, they can use <a href="ch10s02.htm#sect_comparingmerging_13768_91853">DIFFzilla®</a> to compare and merge the two versions of the 
        file.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1017058"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_0B77B092_7EAA"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_1D6DC5F7_FE89"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_C4720DA4_5B27"></a>Setting the Active Project</h4></div></div></div><p class="NormalText">Each workspace contains one project that is the active project. The active project is the one that is built when you click <span><strong class="guimenu">Build </strong></span> &#8594; <span><strong class="guimenuitem">Build</strong></span>. If the active project depends on other projects, those projects will be built first.</p><p class="NormalText">To make a project active, click <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Set Active Project</strong></span>, and pick the project to make active. Alternately, you can use the Workspace Properties dialog box to set the active project (see <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_60825">Managing Projects within a Workspace</a>).</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_45387"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1014035"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_DEA3BAFF_30F8"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_A8FC1484_BF6F"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_CD0DDE6D_289E"></a>Defining Project Dependencies</h4></div></div></div><p class="NormalText">Dependencies define a relationship between two projects, causing the dependent project to be built after the projects it depends on. This ensures that elements in a depended-on project are up-to-date prior to building the dependent project. Project dependencies can be defined when a project is created.</p><p class="NormalText">To specify dependencies, complete the following steps:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">Click <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Workspace Properties</strong></span>.</p></li><li><p class="NormalText">Select the project you want to have depend on other projects.</p></li><li><p class="NormalText">Click the <span><strong class="guibutton">Dependencies</strong></span> button. The Project Properties dialog box opens with the <a href="ch12s05.htm#sect_project_menuanddialogs_13898_41995">Dependencies Tab</a> displayed.</p></li><li><p class="NormalText">Mark the check box next to the projects upon which the selected project should depend. These dependencies will be built before the project is built when a build or rebuild is performed.</p></li><li><p class="NormalText">Click <span><strong class="guibutton">OK</strong></span>.</p></li></ol></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_79593"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1014036"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_51D65EA6_EC55"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_311D7676_C9C4"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_29E167D9_770D"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_8FAC6487_3490"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_10232AB5_B78E"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_120A33E2_1BC8"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_1A8CC324_CA4C"></a>Project Configurations</h4></div></div></div><p class="NormalText">Projects can have multiple configurations, each with different values for project settings. The most common use of project configurations is for creating a debug or release version of a project without having to define a new project. The Project Configuration Settings dialog box (<span><strong class="guimenu">Build </strong></span> &#8594; <span><strong class="guimenuitem">Configurations</strong></span>) is available for viewing, adding, and deleting project configurations. You can change the active configuration by selecting <span><strong class="guimenu">Build </strong></span> &#8594; <span><strong class="guimenuitem">Set Active Configuration</strong></span> from the main menu.</p><p class="NormalText">SlickEdit creates a "Debug" and "Release" configuration for each new project. These configurations are identical, until you change the project settings associated with them. When you select <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Project Properties</strong></span>, the drop-down list at the top lets you select the project configuration you are modifying. The "All configurations" value is selected by default. By selecting a configuration you can change things that are specific to that configuration, like setting compiler flags or changing the list of source files.</p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Note</h3><p class="CellBody"></p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
              <span class="bold"><strong>Visual C++</strong></span> - If you open a Visual C++ v5.0 or later workspace, the configurations are automatically retrieved from the Visual C++ project. Some typical configurations for Visual C++ v5.0 or later are "CFG=MyApp - Win32 Debug" and "CFG=MyApp - Win32 Release." Use Visual C++ to change the configurations.</p></li><li><p class="NormalText">
              <span class="bold"><strong>Mac OS X</strong></span> - Opening an Xcode project imports styles that you cannot change using SlickEdit®. You will need to change the styles using Xcode. You can work with the project in SlickEdit, but you cannot change the project settings.</p></li></ul></div></div><p class="NormalText">For information on using Project Configurations in builds, see <a href="ch07.htm#sect_buildingandcompiling_14399_19990">Project Configurations in Builds</a>.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_92455"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1014037"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_FD0F6206_D75A"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_7D3B39A0_BE91"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_6EC91648_E332"></a>Configuring Project Directories</h4></div></div></div><p class="NormalText">The <span><strong class="guimenu">Directories </strong></span>tab of the Project Properties dialog box (<span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Project Properties</strong></span>) allows you to set the working directory, references file, and include file search directories for the current project. See <a href="ch12s05.htm#sect_project_menuanddialogs_13898_32706">Directories Tab</a> for a list of the options.</p><div class="mediaobject"><img src="Resources/projectproperties_dialog_directoriestab.png"></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_14249"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1014038"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_40781B7B_3E71"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_DEB01B0B_8378"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_C7C9E565_C42B"></a>Configuring Project Tools</h4></div></div></div><p class="NormalText">The <span><strong class="guimenu">Tools </strong></span>tab of the Project 
        Properties dialog box (<span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Project Properties</strong></span>) is used to change project commands and their properties.</p><div class="mediaobject"><img src="Resources/projectproperties_dialog_tools_tab.png"></div><p class="NormalText">The options on the <span><strong class="guimenu">Tools</strong></span> tab vary, depending on the tool name that is selected in the <span><strong class="guilabel">Tool name</strong></span> text box. This text box contains a list of the tools/commands that can be used for projects. You can have different tools for different projects, and you can choose whether or not each tool should appear on the Build menu.</p><p class="NormalText">Use the up and down arrows to move the tools up and down in the list. This order corresponds to the order in which the tool appears on the Build menu. Click the red <span><strong class="guibutton">X</strong></span> button to remove a user-defined tool (default tools cannot be deleted). Click the <span><strong class="guibutton">New</strong></span> button to add a tool. Click the <span><strong class="guibutton">Advanced</strong></span> button to change environment variables (see <a href="ch13s03.htm">Environment Variables</a>).</p><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1017535"></a>Setting Language-Specific Options</h5></div></div></div><p class="NormalText">The <span><strong class="guibutton">Options</strong></span> button on the Project Properties <span><strong class="guimenu">Tools</strong></span> tab is only available for selected tools that support language-specific options. Click the <span><strong class="guibutton">Options</strong></span> button to display options specific to the language with which you are currently working. From there you can make settings for the command that gets executed for the tool specified in the <span><strong class="guilabel">Tool name</strong></span> combo box. For more information on changing language options, see the topic for your language in the <a href="ch09.htm#chap_langspecediting_12633_26084">Language-Specific Editing</a> chapter.</p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="tip" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Tip</h3><p class="CellBody">
            (Java only) You can easily change Java tool options including the class path. Click the <span><strong class="guibutton">Options</strong></span> button here to display the Java Options dialog box, which allows you to customize options supported by Javac, Javadoc, and JAR. To change the compiler from Javac to another compiler (such as SJ or Jikes&#8482;), from the Java Options dialog, select the <span><strong class="guimenu">Compiler </strong></span>tab, then select the <span><strong class="guimenu">Other </strong></span>tab, and type the compiler name.</p></div></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1017540"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_B11CBEA9_F5FD"></a>Command Line Execution</h5></div></div></div><p class="NormalText">The <span><strong class="guilabel">Command line</strong></span> text box on the Project Properties <span><strong class="guimenu">Tools</strong></span> tab is only available (and visible) for selected tools that support a command line execution. It defines the command line that is set to be executed for the selected tool in the Tool name combo box. This field is initially blank when you modify settings for "All Configurations", and the settings differ for different configurations. Click the buttons to the right of this text box to insert files and escape sequences (such as <span><strong class="command">%f</strong></span> which inserts the current buffer name) that you can use to build your command line.</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1017542"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_A6854567_9738"></a>Specifying a Command Directory</h5></div></div></div><p class="NormalText">For each tool listed on the Project Properties <span><strong class="guimenu">Tools</strong></span> tab, you can specify the directory from which to run the command in the <span><strong class="guilabel">Run from dir</strong></span> text box. By default, all of the tools are run from the working directory that is specified using the <span><strong class="command">%rw</strong></span> or <span><strong class="command">%rp</strong></span> escape sequences, which indicate the working directory or project directory, respectively. When running programs like <span><strong class="command">ant</strong></span> or <span><strong class="command">make</strong></span>, this is typically set to the directory containing the makefile.</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1017544"></a>Other Options</h5></div></div></div><p class="NormalText">The remaining options on the Project Properties <span><strong class="guimenu">Tools</strong></span> tab allow you to specify output, save, display, and other settings.</p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Note</h3><p class="CellBody">
            (UNIX only) Output of text mode programs that are executed using <span><strong class="command">xterm</strong></span> cannot be captured. To see the output, uncheck the Output options <span><strong class="guilabel">Capture output</strong></span> and <span><strong class="guilabel">Output to build window</strong></span>, then prefix the program name in the <span><strong class="guilabel">Command line</strong></span> field with <span><strong class="command">xterm -e</strong></span> or <span><strong class="command">dos -w</strong></span> (this waits for a key press).</p></div><p class="NormalText">All of the options and settings on the Project Properties <span><strong class="guimenu">Tools</strong></span> tab are outlined in the section <a href="ch12s05.htm#sect_project_menuanddialogs_13898_59558">Tools Tab</a>.</p></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_99288"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1014039"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_3C1622C5_3309"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_D64F4C37_1DE3"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_6EFA413E_52EA"></a>Configuring Build Settings</h4></div></div></div><p class="NormalText">The commands <span><strong class="command">project_compile</strong></span> (<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">F10</strong></span> or <span><strong class="guimenu">Build </strong></span> &#8594; <span><strong class="guimenuitem">Compile</strong></span>) and <span><strong class="command">project_build</strong></span> (<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">M</strong></span> or <span><strong class="guimenu">Build </strong></span> &#8594; <span><strong class="guimenuitem">Build</strong></span>) start the compile and build commands respectively for the current project. </p><p class="NormalText">The commands <span><strong class="command">next_error</strong></span> 
        (<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Down</strong></span> or <span><strong class="guimenu">Build </strong></span> &#8594; <span><strong class="guimenuitem">Next Error</strong></span>) and <span><strong class="command">prev_error</strong></span> (<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Up</strong></span> or <span><strong class="guimenu">Build </strong></span> &#8594; <span><strong class="guimenuitem">Previous Error</strong></span>) allow for quick navigation of compiler errors. For information about building and compiling projects, see <a href="ch07.htm#sect_buildingandcompiling_14399_80556">Building and Compiling</a>. </p><p class="NormalText">To change the build and compile commands for projects as well as other project options, use the <span><strong class="guimenu">Build </strong></span>tab of the Project Properties dialog (<span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Project Properties</strong></span>). The <span><strong class="guimenu">Build</strong></span> tab allows you to run programs and/or execute commands before or after a build. You can run different programs and commands for different projects as the information is stored per-configuration. The contents of this tab are unavailable for extension-based projects.</p><div class="mediaobject"><img src="Resources/projectproperties_dialog_build_tab.png"></div><p class="NormalText">Each line in the <span><strong class="guilabel">Pre</strong></span> and <span><strong class="guilabel">Post Build Commands</strong></span> text boxes can contain a program to execute a command. For example, the <span><strong class="command">set</strong></span> command could be used to set environment variables. Double-click on the text as indicated in the text boxes to add commands. Use the <span><strong class="guibutton">Up</strong></span> and <span><strong class="guibutton">Down</strong></span> arrows to the right of the text boxes to move the commands up and down in the list. The order corresponds to the order in which the command will be run.</p><p class="NormalText">When the <span><strong class="guilabel">Stop on error</strong></span> option is checked and the current project depends on other projects, the <span><strong class="command">vsbuild</strong></span> utility (see <a href="ch07.htm#sect_buildingandcompiling_14399_95395">Using Build and Compile Operations</a>) will be used to build the projects and check for error codes. When the <span><strong class="command">vsbuild</strong></span> program detects an error, it does not continue building other dependencies.</p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Note</h3><p class="CellBody"> (Windows only) Under Windows 95 or later, <span><strong class="command">vsbuild</strong></span> cannot detect error codes returned from a batch program.</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1017741"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_459BE4D8_C55E"></a>
          <a class="indexterm" name="sect_workingwithworkspacesandprojects_81CA7221_84AF"></a>Build System Options</h5></div></div></div><p class="NormalText">The build method options on the <span><strong class="guimenu">Build</strong></span> tab apply to GNU C/C++ projects only and affect all configurations. With these options, you will not need to convert the current build methods to use the GNU debugger; you can select one of these methods when you create a new GNU C/C++ Wizard project. </p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
              <span><strong class="guilabel">Build without a makefile (dependencies automatically checked)</strong></span> - Automatically checks dependencies and does not generate a makefile. Instead, the <span><strong class="command">vsbuild</strong></span> utility (see <a href="ch07.htm#sect_buildingandcompiling_14399_95395">Using Build and Compile Operations</a>) determines what should be compiled dynamically. This option is useful when you are not concerned with how the build gets done. Make sure the project include directories are set up correctly (<span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Project Properties</strong></span>, <a href="ch12s05.htm#sect_project_menuanddialogs_13898_32706">Directories Tab</a>) so include files may be found (see <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_92455">Configuring Project Directories</a>).</p></li><li><p class="NormalText">
              <span><strong class="guilabel">Build with a user-maintained makefile or custom build command</strong></span> - Sets the build command to <span><strong class="command">make</strong></span> and does not generate a makefile. The build command can be changed from the <span><strong class="guimenu">Tools </strong></span>tab of the Project Properties dialog box (see <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_14249">Configuring Project Tools</a>). Select this option when you already have your own method for building the source.</p></li><li><p class="NormalText">
              <span><strong class="guilabel">Build with an auto-generated, auto-maintained makefile</strong></span> - Automatically generates a makefile and updates when files are added to the project. This option is useful when you need a makefile and do not want to use the built-in <span><strong class="command">vsbuild</strong></span> utility (see <a href="ch07.htm#sect_buildingandcompiling_14399_95395">Using Build and Compile Operations</a>). Specify the path to the makefile in the <span><strong class="guilabel">Makefile</strong></span> field. Make sure the project include directories are set up correctly (<span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Project Properties</strong></span>, <a href="ch12s05.htm#sect_project_menuanddialogs_13898_32706">Directories Tab</a>) so include files may be found (see <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_92455">Configuring Project Directories</a>).</p></li></ul></div><p class="NormalText">To start a build from outside the application, execute the following command where <span class="emphasis"><em>make</em></span> is the name of the <span><strong class="command">make</strong></span> program, <span class="emphasis"><em>Makefile</em></span> is the name of the makefile, and <span class="emphasis"><em>ConfigName</em></span> is the name of the configuration:</p><pre class="programlisting">
          <span class="emphasis"><em>make</em></span>
          <span><strong class="command"> -f </strong></span>
          <span class="emphasis"><em>Makefile</em></span>
          <span><strong class="command"> CFG=</strong></span>
          <span class="emphasis"><em>ConfigName</em></span>
        </pre></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_59725"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1014040"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_226FDCD3_C347"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_A23CB075_0B5C"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_6DBE2925_51DE"></a>Defining Language-Specific Projects</h4></div></div></div><p class="NormalText">If you are building something that only contains one source file and no project, you can define a language-specific project. Language-specific projects are based on the language of the current file. However, the working directory is ignored for these projects. All language-specific projects are stored in the file <code class="filename">project.vpe</code> (UNIX: <code class="filename">uproject.vpe</code>). </p><p class="NormalText">To define a language-specific project, complete the following steps:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">From the main menu, click <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Languages</strong></span>, expand your language category and language, then select <span><strong class="guilabel">General</strong></span>.</p></li><li><p class="NormalText">Click <span><strong class="guilabel">Language-Specific Project</strong></span>.</p></li></ol></div></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_workingwithworkspacesandprojects_15038_88989"></a>
      <a name="sect_workingwithworkspacesandprojects_15038_1014041"></a>
      <a class="indexterm" name="sect_workingwithworkspacesandprojects_865522C2_EA06"></a>
    Managing Source Files</h3></div></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_65404"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1014042"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_B249F410_F1DE"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_F202361A_1FF4"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_1AE78658_EF8D"></a>Adding and Removing Files</h4></div></div></div><p class="NormalText">To get the benefits of SlickEdit&#8217;s Context Tagging features or to use the 
        SlickEdit build system, SlickEdit must know about the set of files you are working on.  The 
        <span><strong class="guilabel">Project Properties</strong></span> dialog contains a <span><strong class="guilabel">Files</strong></span> tab that 
        lists the files associated with this project. Files can be added to the project explicitly or 
        implicitly.</p><div class="mediaobject"><img src="Resources/projectproperties_dialog_files_tab.png"></div><p class="NormalText">You explicitly add files to the project using <span><strong class="guibutton">Add 
        File</strong></span> or <span><strong class="guibutton">Add Tree</strong></span>. Files can also be explicitly added to your 
        project when you select <span><strong class="guimenu">File </strong></span> &#8594; <span><strong class="guimenuitem">New</strong></span> (added by default) or when you select <span><strong class="guimenu">File </strong></span> &#8594; <span><strong class="guimenuitem">Save As</strong></span> (file not added by default). 
        Explicitly added files are listed on the Files tab.</p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Note</h3><p class="CellBody">By default SlickEdit displays the <span><strong class="guilabel">Project 
          Properties</strong></span> dialog with <span><strong class="guilabel">All Configurations</strong></span> selected. You can 
          change this to select the active configuration by setting the variable 
          <span><strong class="command">def_project_prop_show_curconfig</strong></span> to 1. For more information on setting macro 
          variables, see <a href="ch13s04.htm">Configuration Variables</a>.</p></div><p class="NormalText">You can add files implicitly using the
                                                                       <span><strong class="guibutton">Add as wildcard</strong></span>
        option available on the <span><strong class="guilabel">Add Tree</strong></span> dialog. With this
                                  mechanism, you define a
        filespec which SlickEdit will use to search for matching files. This
        search is performed each time the editor is launched. Using this method,
        only the filespec is listed in the Files tab, not the matching files.
      </p><p class="NormalText">These two approaches can be mixed. You can have some files in your project 
        picked up by wildcard and others that are explicitly added. In that case you will see both 
        filespecs and actual files listed. You should be careful not to explicitly add any files in 
        directories that will be matched by a wildcard, or the file will be picked up and added to the 
        project twice.</p><p class="NormalText">SlickEdit works the same whether the file was added explicitly or 
        implicitly. In both cases, the file will be tagged and can be built using the SlickEdit build 
        system. Which mechanism you choose depends on how you work and whether your whole team is using 
        SlickEdit. The following questions govern how to set up your projects:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">Is the whole team working with SlickEdit?</p></li><li><p class="NormalText">Do you want to use the SlickEdit build system?</p></li><li><p class="NormalText">Do your directories often contain scratch files that should not be 
            included into a project?</p></li><li><p class="NormalText">Do you have a large or remotely stored codebase?</p></li></ul></div><p class="NormalText">If the whole team is working with SlickEdit, then you can easily manage the 
        list of files explicitly. You use <span><strong class="guilabel">Add Tree</strong></span> and <span><strong class="guilabel">Add File</strong></span> 
        when first setting up your projects. Then newly added files are picked up when you create them, 
        using <span><strong class="guimenu">File </strong></span> &#8594; <span><strong class="guimenuitem">New</strong></span>. By 
        checking in your workspace and project files along with your source files other team members will 
        see newly added files when they update from the repository. This approach is particularly useful 
        if you plan to use the SlickEdit build system.</p><p class="NormalText">If some team members are not using SlickEdit, then they will be creating 
        new files without updating the workspace and project files. You can use
        <span><strong class="guilabel">Add as wildcard
        </strong></span> (found on the <span><strong class="guilabel">Add Tree</strong></span> dialog) to
        create the file list, and it will pick up these newly added files,
        assuming the files were added in a location specified by one of the
         filespecs.</p><p class="NormalText">One drawback in using <span><strong class="guilabel">Add
                                                      as wildcard</strong></span> is
                                                      that it may pick
        up files that you don't want to include in the project. This is typically the case if you create 
        scratch files with the same extension and leave them in the same directories as your source 
        files. While this is not a problem for Context Tagging, except for the occasional unneeded 
        symbol, it can pose a bigger problem for the build system. Since SlickEdit uses the same file 
        list for both, you need to consider your work habits when using
                                                                          <span><strong class="guilabel">Add as wildcard</strong></span>
        with the SlickEdit build system.</p><p class="NormalText">Performance also needs to be considered before choosing <span><strong class="guilabel">Add 
        as wildcard</strong></span>. If you have a normal sized project and all of
        the source files are stored
        locally, the <span><strong class="guilabel">Add as wildcard</strong></span> check will only take a
                       few seconds. In testing, a
        project with over 1,000 source files took less than 10 seconds to build the initial file list and 
        less than a second to scan for updates. If you have a very large project or your source files are 
        stored on a network share, this can take 
        significantly longer.</p><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_30845_36798"></a>How to Add or Remove Files From a Project</h5></div></div></div><p class="NormalText">To add or remove files from a project, complete the following steps:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">From the main menu, click <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Project Properties</strong></span>. The Project Properties dialog is displayed.</p></li><li><p class="NormalText">Click to display the <span><strong class="guimenu">Files </strong></span>tab.</p></li><li><p class="NormalText">Perform the file operation:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
                  <a href="ch05.htm#sect_workingwithworkspacesandprojects_41881_92278">Add Files</a> - Use for adding 
                  individual files.</p></li><li><p class="NormalText">
                  <a href="ch05.htm#sect_workingwithworkspacesandprojects_18617_09202">Add Tree</a> - Use for adding 
                  files in a directory or directory tree. Click <span><strong class="guibutton">Add Tree</strong></span>, then 
                  select the directory and the file filter to use.</p></li><li><p class="NormalText">
                  <a href="ch05.htm#sect_workingwithworkspacesandprojects_73994_43254">Add as wildcard</a> - Use for adding 
                  files from a directory or directory tree matching the specified wildcard. This 
                  expression is evaluated each time SlickEdit is loaded, adding new files from the 
                  specified directory.</p></li><li><p class="NormalText">
                  <span class="bold"><strong></strong></span>
                  <span><strong class="guibutton">Remove</strong></span> - To remove the selected files.</p></li><li><p class="NormalText">
                  <span class="bold"><strong></strong></span>
                  <span><strong class="guibutton">Remove All</strong></span> - To remove all files from this project.</p></li><li><p class="NormalText">
                  <span class="bold"><strong></strong></span>
                  <span><strong class="guibutton">Refresh</strong></span> - To update the list of files, re-evaluating any wildcards that have been specified.</p></li><li><p class="NormalText">
                  <span class="bold"><strong></strong></span>
                  <span><strong class="guibutton">Import</strong></span> - Loads files and directories specified in an import file. See <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_39683">Importing Files</a> for more details.</p></li></ul></div></li></ol></div></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_41881_92278"></a>Add Files</h5></div></div></div><p class="NormalText">Use <span><strong class="guilabel">Add Files</strong></span> to add a single file or the files from 
          a single directory to your SlickEdit project. When you click the <span><strong class="guibutton">Add 
          Files</strong></span> button, SlickEdit displays the <span><strong class="guilabel">Add Source Files</strong></span> dialog. 
          With this, you can browse to a directory and select one or more files to add. You can filter 
          the list of displayed files by selecting from the <span><strong class="guilabel">Files of type</strong></span> drop down 
          list.</p></div><div class="sect4" lang="en"><div class="titlepage"><div><div><h5 class="title"><a name="sect_workingwithworkspacesandprojects_18617_09202"></a>Add Tree</h5></div></div></div><p class="NormalText">
          Use <span><strong class="guilabel">Add Tree</strong></span> to add all or some of the files under a specified directory. 
          SlickEdit displays the <span><strong class="guilabel">Add Tree</strong></span> dialog, which allows you to select a 
          directory from which to add files. Select a value or enter a new value in the <span><strong class="guilabel">File 
          types</strong></span> combo box to specify which kinds of files are added. To enter your own file 
          types, use * to match any characters and separate multiple file types using a semicolon. For 
          more information on this dialog, see <a href="ch12s05.htm#sect_project_menuanddialogs_13898_28563">Add Tree Dialog</a>.</p><div class="mediaobject"><img src="Resources/projectproperties_addtree_dialog.png"></div><p class="NormalText">The <span><strong class="guilabel">Recursive</strong></span> checkbox is checked by default, so 
          SlickEdit will search any subdirectories under the selected directory. To limit the search to 
          the selected directory, uncheck <span><strong class="guilabel">Recursive</strong></span>.</p><p class="NormalText">You can also specify files, file types, or directories to exclude using 
          the <span><strong class="guilabel">Exclude</strong></span> field. Separate multiple patterns with a semicolon.</p><div class="table"><a name="sect_workingwithworkspacesandprojects_03821_54189"></a><p class="title"><b>Table 5.1. Examples:</b></p><div class="table-contents"><table summary="Examples:" border="1"><colgroup><col><col></colgroup><thead><tr><th>
                  <p class="CellHeading">Pattern</p>
                </th><th>
                  <p class="CellHeading">Result</p>
                </th></tr></thead><tbody><tr><td>
                  <p class="CellBody">
                    *.hpp
                  </p>
                </td><td>
                  <p class="CellBody">
                    Excludes all files with the "hpp" extension.
                  </p>
                </td></tr><tr><td>
                  <p class="CellBody">
                    junk*
                  </p>
                </td><td>
                  <p class="CellBody">
                    Excludes all files that begin with the word "junk".
                  </p>
                </td></tr><tr><td>
                  <p class="CellBody">
                    CVS\   (Windows)
                  </p>
                  <p class="NormalText">
                    CVS/   (Linux, UNIX, Mac)
                  </p>
                </td><td>
                  <p class="CellBody">Excludes all directories named "CVS".
                  </p>
                </td></tr><tr><td>
                  <p class="CellBody">
                    *.hpp;junk*;CVS\
                  </p>
                </td><td>
                  <p class="CellBody">Excludes all of the above.
                  </p>
                </td></tr></tbody></table></div></div><br class="table-break"><div class="sect5" lang="en"><div class="titlepage"><div><div><h6 class="title"><a name="sect_workingwithworkspacesandprojects_73994_43254"></a>Add as wildcard</h6></div></div></div><p class="NormalText">Use the <span><strong class="guilabel">Add as
                                            wildcard</strong></span> checkbox to
                                            specify that you want this tree to be
                                            periodically checked for new files.
          </p></div></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1014043"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_CA48B20E_D318"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_0F42830E_32CC"></a>Creating New Files</h4></div></div></div><p class="NormalText">There are two different approaches to adding a new file to a project:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">Create a buffer with the correct name and then do a <span><strong class="guimenu">File </strong></span> &#8594; <span><strong class="guimenuitem">Save As</strong></span> to store the file in the correct location and, optionally, add it to the project.</p></li><li><p class="NormalText">Use <span><strong class="guimenu">File </strong></span> &#8594; <span><strong class="guimenuitem">New</strong></span> or <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Add New Item from Template</strong></span> to create the file and put it in the correct place in the project.</p></li></ul></div><p class="NormalText">Many developers prefer the first approach because it is faster and allows you to keep your hands on the keyboard. A new buffer named <code class="filename">foo.cpp</code> can be created from the command line by typing <span><strong class="command">e foo.cpp</strong></span>.</p><p class="NormalText">To create a new source file using the second approach, complete the following steps:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">From the main menu, click <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">New</strong></span> and select the <span><strong class="guimenu">File </strong></span>tab.</p></li><li><p class="NormalText">Select the document mode from the list on the left.</p></li><li><p class="NormalText">To add the new file to an existing project, mark the <span><strong class="guilabel">Add to project</strong></span> check box and select the project from the drop-down list.</p></li><li><p class="NormalText">Type a file name, including the extension, in the <span><strong class="guilabel">Filename</strong></span> field.</p></li><li><p class="NormalText">Verify that the <span><strong class="guilabel">Location</strong></span> is correct.</p></li><li><p class="NormalText">Change the <span><strong class="guilabel">Encoding</strong></span> as needed.</p></li><li><p class="NormalText">Click <span><strong class="guibutton">OK</strong></span>.</p></li></ol></div><p class="NormalText">This same approach can be used with the SlickEdit® Code Templates by clicking <span><strong class="guimenu">File </strong></span> &#8594; <span><strong class="guimenuitem">New Item from Template</strong></span>. See <a href="ch08s12.htm">Code Templates</a> for more information.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_39683"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1014044"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_42D5350F_7EFB"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_4FDD04ED_6E1D"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_23FB1384_3FA0"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_DA7A298D_57F0"></a>Import Files</h4></div></div></div><p class="NormalText">The Import Files dialog (<span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Project Properties</strong></span>, select the <span><strong class="guimenu">Files </strong></span>tab, then click the <span><strong class="guibutton">Import</strong></span> button) allows you to load files and directories specified in an import file into your project.</p><div class="mediaobject"><img src="Resources/importfiles_dialog.png"></div><p class="NormalText">The dialog has the following fields:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText"><span><strong class="guilabel">Import file</strong></span> - the 
        import file containing a list of the files and directories to be added 
        to the current project.  Use the browse button to navigate to and select 
        the file. 
         Each line in the file should contain the full path of a file or a 
         directory to be added to the project.  For directories, the application 
         will add the files within that directory to the project.
          </p></li><li><p class="NormalText"><span><strong class="guilabel">Recurse 
                                    directories</strong></span> - Check 
                                    this box to recurse into the subdirectories 
                                    of directories specified in the import file.
          </p></li><li><p class="NormalText"><span><strong class="guilabel">File types</strong></span> - Check this 
            box to include only specific file types when adding files from 
        directories specified in the import file.  Select a file type from the 
        combo box or add your own.  If this box is not checked, then all the 
        files found will be added (*.*).  The file type restriction does not 
        apply to individual files listed in the import file.  They will be 
        added to the project regardless of this setting.
          </p></li></ul></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_76223"></a>
        <a name="sect_workingwithworkspacesandprojects_15038_1025958"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_BC57E183_BC25"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_EC4F7A16_EC76"></a>Importing Makefiles</h4></div></div></div><p class="NormalText">You can create a project by importing a makefile. SlickEdit® parses the targets, finds all referenced source files, and adds them to the project. When you import a makefile, SlickEdit creates a new workspace and adds the project to it. If the same makefile is ever imported again, the corresponding workspace can be opened without creating a new redundant workspace.</p><p class="NormalText">The new project automatically imports all files that are referenced by the makefile. All of the make targets are also added and made available for execution from the main menu under <span><strong class="guimenu">Build </strong></span> &#8594; <span><strong class="guimenuitem">Execute Makefile Target</strong></span>. For makefiles that contain invocations of other makefiles, the other makefiles can be optionally added to the workspace as separate projects, or all their files added into one project.</p><p class="NormalText">The Build option for the makefile project is set to <span><strong class="command">Build with a 
        user-maintained makefile or custom build command</strong></span> (<span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Project Properties</strong></span>, 
        <span><strong class="guilabel">Build tab</strong></span>) and the build command is set to <span><strong class="command">make</strong></span>. See 
        <a href="ch05.htm#sect_workingwithworkspacesandprojects_15038_99288">Build System Options</a> for more information.</p><p class="NormalText">To create a new project by importing a makefile, from the main menu, click 
        <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">Open Other Workspace </strong></span> &#8594; <span><strong class="guimenuitem">Makefile</strong></span> (or use the <span><strong class="command">workspace_open_makefile</strong></span> command). The 
        Open Makefile as Workspace dialog is displayed.</p><div class="mediaobject"><img src="Resources/openmakefileasworkspace_dialog.png"></div><p class="NormalText">In the <span><strong class="guilabel">Makefile</strong></span> field,
        specify the makefile to import. Use the <span><strong class="guibutton">Browse</strong></span>
        button to browse for the makefile. Check <span><strong class="guilabel">Scan for recursive
        makefile calls</strong></span> if you want to also scan for invocations of
        make on other makefiles and to include them in the project. In this
        case, you can also check <span><strong class="guilabel">Make recursive makefile calls
        separate projects</strong></span> if you want a new, separate project created
        for each of the referenced makefiles. Then, specify any file types to
        include or exclude by using the drop-down lists or by typing the file
        extensions separated with semicolons (colons on UNIX). The "*" wildcard
        is permitted. For example,
                     <span class="bold"><strong>*.ch;*.chf;*.chs;*.cpp;*.h</strong></span>
        can be used to include or exclude all referenced files with those
        extensions (<span class="bold"><strong>*.ch:*.chf:*.chs:*.cpp:*.h</strong></span>
        for UNIX).</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_workingwithworkspacesandprojects_15038_1018282"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_F7127FF7_0CFA"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_896BD441_AB13"></a>
        <a class="indexterm" name="sect_workingwithworkspacesandprojects_CE11FABF_DC8B"></a>Loading Project Files for Editing</h4></div></div></div><p class="NormalText">The Files tool window can be used to open one or more files from the current project or the current workspace. To display the tool window, from the main menu, click <span><strong class="guimenu">Project</strong></span>, then select <span><strong class="guimenu">Open Files from Project</strong></span> or <span><strong class="guimenu">Open Files from Workspace</strong></span> (<span><strong class="command">project_load</strong></span> command). The files that are shown in the tool window depend on the menu item selected. A button on the tool window also lets you toggle between viewing current project files and current workspace files. </p><p class="NormalText">To open a selected file, press <span><strong class="keycap">Enter</strong></span>. Use <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Click</strong></span> to select more than one file. See <a href="ch12s08.htm#sect_document_menuanddialogs_14400_14717">Document Dialogs and Tool Windows</a> for more information about operations in this window.</p><p class="NormalText"></p></div></div></div></div></body></html>
