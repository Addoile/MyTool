<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Four Ways to Use Slick-C®</title><link rel="stylesheet" href="slickedit_help.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.71.1"><link rel="start" href="index.htm" title="Welcome to SlickEdit 2013"><link rel="up" href="ch14.htm" title="Chapter 14.  Slick-C® Macro Programming Guide"><link rel="prev" href="ch14s02.htm" title="Differences Between Slick-C® and C++"><link rel="next" href="ch14s04.htm" title="Language Constructs"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><p class="HeaderText"><a href="index.htm#contents">Contents</a> : <a href="ix01.htm">Index</a> : <a href="search.htm">Search</a></p><hr><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="slick_c_fourwaystouse_12788_31370"></a>
    <a name="slick_c_fourwaystouse_12788_1001498"></a>Four Ways to Use Slick-C®</h2></div></div></div><p class="NormalText">There are four ways to extend the SlickEdit® code editor using Slick-C:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
        <a href="ch14s03.htm#recordslickcmacros">Recording Slick-C® Macros</a>
      </p></li><li><p class="NormalText">
        <a href="ch14s03.htm#keybindablecommand">Key Bindable Command</a>
      </p></li><li><p class="NormalText">
        <a href="ch14s03.htm#eventdrivendialogboxes">Event-Driven Dialog Boxes</a>
      </p></li><li><p class="NormalText">
        <a href="ch14s03.htm#batchmacros">Batch Macros</a>
      </p></li></ul></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="recordslickcmacros"></a>
      <a name="slick_c_fourwaystouse_12788_1001500"></a>Recording Slick-C® Macros</h3></div></div></div><p class="NormalText">When using macro recording, Slick-C source code is created for a key bindable command. To create a recorded macro, complete the following steps:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">From the main menu, select <span><strong class="guimenu">Macro </strong></span> &#8594; <span><strong class="guimenuitem">Record Macro</strong></span>.</p></li><li><p class="NormalText">Perform the actions that you want the macro to repeat.</p></li><li><p class="NormalText">When finished, select <span><strong class="guimenu">Macro </strong></span> &#8594; <span><strong class="guimenuitem">Stop Recording</strong></span>.</p></li></ol></div><p class="NormalText">The macro is saved as Slick-C source code and you can edit the recorded macro through the user interface. Recorded macros are saved in the <code class="filename">vusrmacs.e</code> file in the user configuration directory. </p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="keybindablecommand"></a>
      <a name="slick_c_fourwaystouse_12788_1001507"></a>
      <a name="slick_c_fourwaystouse_12788_15798"></a>Key Bindable Command</h3></div></div></div><p class="NormalText">A key bindable command is the most common way to extend the editor. Command macros can be bound to keys or invoked from a menu. To create a Slick-C® command named <span><strong class="command">hello</strong></span>, complete the following steps:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">Place the macro code below into a new file named <code class="filename">test.e</code>:</p><pre class="programlisting">_command void hello()
{
    message("Hello World");
}</pre></li><li><p class="NormalText">With the file still open, press <span><strong class="keycap">F12</strong></span> or use the <span><strong class="command">load</strong></span> command to compile and load the macro. Or, from the main menu, click <span><strong class="guimenu">Macro </strong></span> &#8594; <span><strong class="guimenuitem">Load Module</strong></span>, then browse and select the macro to load.</p></li></ol></div><p class="NormalText">Now you can type <span><strong class="command">hello</strong></span> in the command line and the message <span><strong class="command">Hello World</strong></span> is displayed.</p><p class="NormalText">The <span><strong class="command">hello</strong></span> command can be bound to a key. To bind the hello 
      command to <span><strong class="keycap">Alt </strong></span>+<span><strong class="keycap">5 </strong></span>, complete the following steps:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">From the main menu, click <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Keyboard and Mouse </strong></span> &#8594; <span><strong class="guimenuitem">Key Bindings.</strong></span></p></li><li><p class="NormalText">In the <span><strong class="guilabel">Search by command</strong></span> combo box, type <span class="bold"><strong>hello</strong></span>.</p></li><li><p class="NormalText">Click <span><strong class="guibutton">Add</strong></span>.</p></li><li><p class="NormalText">Press <span><strong class="keycap">Alt</strong></span>+<span><strong class="keycap">5</strong></span>.</p></li><li><p class="NormalText">Click <span><strong class="guibutton">Bind</strong></span>.</p></li><li><p class="NormalText">Click <span><strong class="guibutton">OK</strong></span> on the Options dialog.</p></li><li><p class="NormalText">Now press <span><strong class="keycap">Alt</strong></span>+<span><strong class="keycap">5</strong></span>. The message <span><strong class="command">Hello World</strong></span> is displayed.</p></li></ol></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="eventdrivendialogboxes"></a>
      <a name="slick_c_fourwaystouse_12788_1001532"></a>
      <a class="indexterm" name="slick-c_fourwaystouse_909C7111_7F00"></a>Event-Driven Dialog Boxes</h3></div></div></div><p class="NormalText">Slick-C® includes a dialog editor that allows you to create event-driven forms using a predefined set of controls.</p><p class="NormalText">This section describes:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
          <a href="ch14s03.htm#slick_c_fourwaystouse_12788_40107">Creating a Simple Event-Driven Dialog Box</a>
        </p></li><li><p class="NormalText">
          <a href="ch14s03.htm#slick_c_fourwaystouse_12788_77778">Loading Code and Displaying Dialog Boxes</a>
        </p></li><li><p class="NormalText">
          <a href="ch14s03.htm#slick_c_fourwaystouse_12788_25162">Binding Commands to Keys for Dialog Box Display</a>
        </p></li></ul></div><p class="NormalText">For more information, see also <span class="bold"><strong><a href="ch14s19.htm">Creating Dialog Boxes</a></strong></span>.</p><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="slick_c_fourwaystouse_12788_40107"></a>
        <a name="slick_c_fourwaystouse_12788_1027968"></a>Creating a Simple Event-Driven Dialog Box</h4></div></div></div><p class="NormalText">To create a simple event-driven dialog box, complete the following steps:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">From the main menu, select <span><strong class="guimenu">Macro </strong></span> &#8594; <span><strong class="guimenuitem">New Form</strong></span>.</p></li><li><p class="NormalText">In the dialog editor Properties dialog box, double-click <span><strong class="guibutton">Insert Button Control</strong></span>.</p><div class="mediaobject"><img src="Resources/addingcontrols.jpg"></div></li><li><p class="NormalText">Double-click <span><strong class="guibutton">Insert Text Cox Control</strong></span> in the dialog editor Properties dialog box.</p></li><li><p class="NormalText">Move the command button or the text box so that they do not overlap. Click on the object with the left mouse button, hold it, and drag to move the object.</p><div class="mediaobject"><img src="Resources/eventdialog.jpg"></div></li><li><p class="NormalText">Double-click on the command button that appears on the form (not the bitmap in the dialog editor Properties dialog box). The Select An Event dialog box appears with <span><strong class="command">lbutton_up</strong></span> displayed in the combo box.</p></li><li><p class="NormalText">Press <span><strong class="keycap">Enter</strong></span> to select the event.</p></li><li><p class="NormalText">The Open dialog box is displayed for a new file that is to contain the source code for this dialog box. Type <code class="filename">form1.e</code> and press <span><strong class="keycap">Enter</strong></span>. A file is displayed named <code class="filename">form1.e</code> with the following lines of code:</p><pre class="programlisting">#include "slick.sh"
 
defeventtab form1;
void ctlcommand1.lbutton_up()
{
 
}</pre></li><li><p class="NormalText">If the previous lines of code are not displayed, then a <code class="filename">form1.e</code> file might already exist. If so, modify the existing <code class="filename">form1.e</code> file to contain the previous lines of code.</p></li><li><p class="NormalText">Modify the code to add the following statement: <span><strong class="command">ctltext1.p_text="Hello World";</strong></span></p><p class="NormalText">Example:</p><pre class="programlisting">#include "slick.sh"
 
defeventtab form1;
void ctlcommand1.lbutton_up()
{
    // Set the p_text property of the text box control
    ctltext1.p_text="Hello World";
}</pre></li><li><p class="NormalText">From the main menu, select <span><strong class="guimenu">Macro </strong></span> &#8594; <span><strong class="guimenuitem">Load Module</strong></span>.</p></li></ol></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="slick_c_fourwaystouse_12788_77778"></a>
        <a name="slick_c_fourwaystouse_12788_1028109"></a>Loading Code and Displaying Dialog Boxes</h4></div></div></div><p class="NormalText">To load the dialog box, and then display it, complete the following steps: </p><div class="orderedlist"><ol type="1"><li><p class="NormalText">Right-click on the form and select <span><strong class="guimenu">Load and Run Form</strong></span>.</p></li><li><p class="NormalText">Click <span><strong class="command">ctlcommand1</strong></span>. <span class="bold"><strong>Hello World</strong></span> is displayed in the text box.</p></li><li><p class="NormalText">To close the Form1 dialog box, press <span><strong class="keycap">Esc</strong></span>.</p></li><li><p class="NormalText">Type <span><strong class="command">show form1</strong></span> to display this dialog box from the 
            command line.</p></li><li><p class="NormalText">To display the dialog box modally, type <span><strong class="command">show -modal form1</strong></span> on the command line.</p></li></ol></div><p class="NormalText">The dialog source is saved in the <code class="filename">vuserdefs.e</code> file in the user configuration directory, <code class="filename">My SlickEdit Config</code>. Press <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Space</strong></span> while any dialog box is running to edit it (including the Properties dialog box).</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="slick_c_fourwaystouse_12788_25162"></a>
        <a name="slick_c_fourwaystouse_12788_1001584"></a>Binding Commands to Keys for Dialog Box Display</h4></div></div></div><p class="NormalText">To bind a command to a key that displays a dialog box, use the following example to write the necessary command:</p><pre class="programlisting">#include "slick.sh"
_command void run_form1()
{
    show("-modal form1");
}</pre><p class="NormalText">See <a href="ch14s03.htm#slick_c_fourwaystouse_12788_15798">Key Bindable Command</a> for more information about binding a command to a key.</p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="batchmacros"></a>
      <a name="slick_c_fourwaystouse_12788_1001594"></a>
      <a class="indexterm" name="slick-c_fourwaystouse_8E4B511E_8559"></a>Batch Macros</h3></div></div></div><p class="NormalText">Slick-C® allows you to write batch macros. Batch macros are macros that can 
      be run, much like shell scripts, from within the editor. They do not need to be loaded, and they do 
      not remain resident in the editor after they have been run.</p><p class="NormalText">Use a batch macro when working with Slick-C® primitives that you want to share among multiple users. Batch macros cannot be bound to a key; however, you can execute a batch macro from the command line or a menu item.</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">Open an empty buffer and type the following code:</p><pre class="programlisting">#include "slick.sh"
void defmain()
{
     message("Hello World");
}</pre></li><li><p class="NormalText">Save the file as <code class="filename">hellow.e</code>, then press <span><strong class="keycap">Esc</strong></span> to open the SlickEdit® command line.</p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Note</h3><p class="CellBody">To be able to run a batch macro without specifying the full path, 
        save the file in a directory listed in the <span><strong class="guilabel">VSLICKPATH</strong></span> envrionment variable. 
         Otherwise, you will need to include an absolute or relative (to the current directory) path to 
         run your batch macro.  For more information, see <a href="ch13s03.htm">Environment Variables</a>.</p></div></li><li><p class="NormalText">Type <span class="bold"><strong>hellow</strong></span>, and press <span><strong class="keycap">Enter</strong></span>.</p></li><li><p class="NormalText">The status line displays the message <span><strong class="command">Hello World</strong></span> is displayed.</p></li></ol></div><p class="NormalText">Batch programs must be saved before they are executed so that the macro can compile. Also, batch programs are automatically compiled if there is no corresponding <code class="filename">.ex</code> file, or if the date of the source file is newer than the date of the <code class="filename">.ex</code> file.</p><p class="NormalText"></p></div></div></body></html>
