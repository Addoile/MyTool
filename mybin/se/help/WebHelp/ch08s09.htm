<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Completions</title><link rel="stylesheet" href="slickedit_help.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.71.1"><link rel="start" href="index.htm" title="Welcome to SlickEdit 2013"><link rel="up" href="ch08.htm" title="Chapter 8.  Editing Features"><link rel="prev" href="ch08s08.htm" title="Adaptive Formatting"><link rel="next" href="ch08s10.htm" title="Aliases"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><p class="HeaderText"><a href="index.htm#contents">Contents</a> : <a href="ix01.htm">Index</a> : <a href="search.htm">Search</a></p><hr><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="sect_completions_12767_99744"></a>
    <a name="sect_completions_12767_998341"></a>
    <a class="indexterm" name="sect_completions_CC21E31C_411D"></a>Completions</h2></div></div></div><p class="NormalText">Completions save keystrokes as you are typing code by providing a way to automatically complete partially-typed text. There are four types of completions in SlickEdit®: </p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
        <a href="ch08s09.htm#sect_completions_12767_18602">Auto-Complete</a> - A feature set that includes syntax, keyword, and symbol completions.</p></li><li><p class="NormalText">
        <a href="ch08s09.htm#sect_completions_65319_36798">Auto-Close</a> - Automatically insert closing characters for bracketed and quotation punctuation pairs.</p></li><li><p class="NormalText">
        <a href="ch08s09.htm#sect_completions_12767_63476">Word Completion</a> - Completions that work for any text in an editor window.</p></li><li><p class="NormalText">
        <a href="ch08s09.htm#sect_completions_12767_46002">Completion in Dialogs</a> - Completions that work in dialog text box fields.</p></li><li><p class="NormalText">
        <a href="ch03s04.htm#sect_usingcommandline_13192_10728">Command Line Completion</a> - Completions for command line entries.</p></li></ul></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_completions_12767_18602"></a>
      <a name="sect_completions_12767_1002765"></a>
      <a class="indexterm" name="sect_completions_20C62523_E137"></a>Auto-Complete</h3></div></div></div><p class="NormalText">Auto-Complete offers suggestions for how syntax, keywords, symbols, and lines of code may be completed by the editor. It works by looking at the word prefix under the cursor and using several different queries to find and suggest completion options. Each of these types of suggestions can be individually turned on or off, allowing you to customize auto-completion to your liking.</p><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_completions_12767_1002593"></a>Using Auto-Complete</h4></div></div></div><p class="NormalText">Auto-Complete is activated when the editor is idle for a short period of time and there is a partially-typed word under the cursor. When Auto-Complete is active, the available completions are indicated in several ways:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">A light bulb appears on the left edge of the editor.</p></li><li><p class="NormalText">A list of completions appears under the word being typed.</p></li><li><p class="NormalText">The rest of the completed word or statement appears to the right of the cursor.</p></li></ul></div><div class="mediaobject"><img src="Resources/testcpp11.jpg"></div><p class="NormalText">These visual hints can also be individually turned on or off through the Auto-Complete options. See <a href="ch12s11.htm#sect_options_menuanddialogs_14207_69582">Language-Specific Auto-Complete Options</a>.</p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="tip" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Tip</h3><p class="CellBody"> Auto-Complete can be activated manually by using the <span><strong class="command">autocomplete</strong></span> command. Bind this command to a key sequence if you use it frequently. See <a href="ch04s03.htm#sect_keymousebindings_13007_84952">Creating Bindings</a> for more information.</p></div><p class="NormalText">To cancel out of Auto-Complete mode, use the <span><strong class="keycap">Escape</strong></span> key.</p><p class="NormalText">To scroll through the items in the completion list, use the <span><strong class="keycap">Up</strong></span>, <span><strong class="keycap">Down</strong></span>, <span><strong class="keycap">PgUp</strong></span>, and <span><strong class="keycap">PgDn</strong></span> keys. Optionally, you can use <span><strong class="keycap">Tab</strong></span> and <span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Tab</strong></span> to cycle through the choices.</p><p class="NormalText">If a completion is selected, you can press <span><strong class="keycap">Space</strong></span>, <span><strong class="keycap">Enter</strong></span>, or any non-identifier key to cause the selected completion to be inserted along with the character typed (except for <span><strong class="keycap">Enter</strong></span>).</p><p class="NormalText">Use <span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Space</strong></span> to insert a real space rather than the completion. Use <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Space</strong></span> to insert the next character of the currently selected completion. This can be useful if you only want part of the word being completed and you do not want to type it yourself. Optionally, pressing <span><strong class="keycap">Tab</strong></span> will cause auto-completion to attempt to insert the longest unique prefix match of all its completions.</p><p class="NormalText">If the completion has comments, you can use <span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">PageDown</strong></span>, <span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">PageUp</strong></span>, <span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Home</strong></span>, or <span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">End</strong></span> to page through the comments. Use <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">C</strong></span> to copy the comments for the current item to the clipboard.</p><p class="NormalText">Auto-Complete options can be configured on a language-specific basis. See <a href="ch12s11.htm#sect_options_menuanddialogs_14207_69582">Language-Specific Auto-Complete Options</a> for information.</p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_completions_65319_36798"></a>
      <a class="indexterm" name="sect_completions_06088_17486"></a>Auto-Close</h3></div></div></div><p class="NormalText">
      Auto-Close will automatically insert closing characters for bracketed and quotation 
      punctuation pairs.  The following list shows the available pairings.
    </p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">Parenthesis ( )</p></li><li><p class="NormalText">Bracket [ ]</p></li><li><p class="NormalText">Angle Bracket &lt; &gt;</p></li><li><p class="NormalText">Double Quote " "</p></li><li><p class="NormalText">Single Quote ' '</p></li><li><p class="NormalText">Braces { }</p></li></ul></div><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Note</h3><p class="CellBody">SlickEdit automatically closes block comments. For example, in C++ 
        when you type "/*" SlickEdit automatically inserts "*/". This is not part of the 
        Auto-Close feature. To configure this, go to <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Languages </strong></span> &#8594; <span><strong class="guimenuitem">[Language Category] </strong></span> &#8594; <span><strong class="guimenuitem">[Language] </strong></span> &#8594; <span><strong class="guimenuitem">Comments</strong></span> and check or uncheck 
        <span><strong class="guilabel">Automatically close block comments</strong></span> See <a href="ch12s11.htm#langspeccommentoptions">Language-Specific Comment Options</a>. 
        </p></div><p class="NormalText">Auto-Close can be configured, as well as enabled/disabled, on a language 
      specific basis.  Specific pairs can also be enabled/disabled per language, as well as automatically 
      inserting padding for Parenthesis, Brackets and Angle Brackets.  To do this, select 
      <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Languages </strong></span> &#8594; <span><strong class="guimenuitem">[Language Category] </strong></span> &#8594; <span><strong class="guimenuitem">[Language] </strong></span> &#8594; <span><strong class="guimenuitem">Auto-Close</strong></span>. For more information on Auto-Close options, see <a href="ch12s11.htm#sect_options_menuanddialogs_51045_32723">Language-Specific Auto-Close Options</a>. 
    </p><p class="NormalText">
      When an opening character in a pair is typed, the closing character will automatically be inserted.
      The closing character is automatically overtyped if you key in the matching close character as you 
      are typing, helping to avoid any syntax errors.   There are also navigation helpers when the close 
      character is inserted.  A hotspot marker is inserted on the right edge of the closing character.  
      When this marker is visible, TAB or ENTER key will jump to the next column past the close bracket, 
      and ESC will dismiss the marker as well as dismiss overtyping of the close character.  Editing 
      outside of the punctuation pair will also automatically dismiss the marker.  You can disable the 
      TAB or ENTER navigation key (or both) in <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Languages </strong></span> &#8594; <span><strong class="guimenuitem">[Language Category] </strong></span> &#8594; <span><strong class="guimenuitem">[Language] </strong></span> &#8594; <span><strong class="guimenuitem">Auto-Close</strong></span>.  If both TAB and 
      ENTER are both disabled, the hotspot marker is not inserted, though overtyping is still available. 
    </p><p class="NormalText">
      When enabled, Auto-Close will only insert the matching closing character for the specific 
      punctuation where appropriate for the current language.  This is determined by scanning the current 
      location and line.  For example, it does not insert any closing characters in comments or strings. 
      In the C++ language, the angle brackets are only auto-closed when following the template 
      or cast keywords (ex: static_cast).
    </p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_completions_12767_63476"></a>
      <a name="sect_completions_12767_1002666"></a>
      <a class="indexterm" name="sect_completions_1C8A147F_5246"></a>Word Completion</h3></div></div></div><p class="NormalText">Word Completions search the current editor window for text matching the prefix at the current cursor position. Most completions are driven by Context Tagging®, matching symbols such as function names and variables. Word Completions can match any text in the current editor window, including comments.</p><p class="NormalText">Auto-Complete also lists word completions, but it is often faster to use key bindings to search for and insert Word Completions. The following is a list of commands for these operations and the key bindings in the CUA emulation. See <a href="ch04s03.htm#sect_keymousebindings_13007_84952">Creating Bindings</a> to change them.</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
          <span><strong class="command">complete_prev</strong></span> (<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Comma</strong></span>) ® Searches backwards through the current editor window to find a match.</p></li><li><p class="NormalText">
          <span><strong class="command">complete_next</strong></span> (<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Dot</strong></span>) ® Searches forwards through the current editor window to find a match.</p></li><li><p class="NormalText">
          <span><strong class="command">complete_more</strong></span> (<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Space</strong></span>) ® Adds subsequently more text from the matched line to the cursor position, allowing you to extend the amount of text inserted.</p></li></ul></div><p class="NormalText">The following example of code shows how word completion is used: </p><pre class="programlisting">if (pWindowView-&gt;pBuffer-&gt;LineNum&gt;100) {
pW&lt;Cursor is Here&gt;
}</pre><p class="NormalText">Press <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Comma</strong></span>,<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Space</strong></span>,<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Space</strong></span> to obtain the following result: </p><pre class="programlisting">if (pWindowView-&gt;pBuffer-&gt;LineNum &gt;100) {
pWindowView-&gt;pBuffer-&gt;LineNum &lt;Cursor is Here&gt;
}</pre><p class="NormalText">Pressing <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Comma</strong></span> matched "pWindowView" in the previous line. If you wanted to match an earlier occurrence beginning with "pW", press <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Comma</strong></span> to find the next previous match. This also changed "pW" on the second line to the matching text, "pWindowView". Pressing <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Space</strong></span> extends that selection, matching "pWindow-&gt;pBuffer". Pressing <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Space</strong></span>, again, extends the selection to include "pWindow-&gt;pBuffer-&gt;LineNum".</p><p class="NormalText">You can easily see how this would save time typing in multiple lines that access structs, class members, arrays, etc.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_completions_12767_46002"></a>
      <a name="sect_completions_12767_1002880"></a>
      <a class="indexterm" name="sect_completions_00EE20E4_C998"></a>Completion in Dialogs</h3></div></div></div><p class="NormalText">Many SlickEdit® dialogs contain fields that offer completions. Dialogs such as the Open dialog box (<span><strong class="guimenu">File </strong></span> &#8594; <span><strong class="guimenuitem">Open</strong></span>) and the New Project dialog box (<span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">New</strong></span>) contain text fields for file names or directory paths. SlickEdit uses completions to help you enter values for these fields. When you type a character, SlickEdit pops up a list of matching values.</p><p class="NormalText">When this list is displayed, the following keys have different behaviors:</p><div class="informaltable"><a name="table_52765040-2b2c-4e9f-8180-9d096926989c"></a><table border="1"><colgroup><col><col></colgroup><thead><tr><th>
              <p class="CellHeading">Key</p>
            </th><th>
              <p class="CellHeading">Behavior</p>
            </th></tr></thead><tbody><tr><td>
              <p class="CellBody">
                <span><strong class="keycap">Esc</strong></span>
              </p>
            </td><td>
              <p class="CellBody">Closes the list.</p>
            </td></tr><tr><td>
              <p class="CellBody">
                <span><strong class="keycap">Enter</strong></span>
              </p>
            </td><td>
              <p class="CellBody">Uses the current value selected.</p>
            </td></tr><tr><td>
              <p class="CellBody">
                <span><strong class="keycap">Tab</strong></span>, <span><strong class="keycap">Down</strong></span>, or <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">K</strong></span></p>
            </td><td>
              <p class="CellBody">Moves to the next item in the list.</p>
            </td></tr><tr><td>
              <p class="CellBody">
                <span><strong class="keycap">Shift</strong></span>+<span><strong class="keycap">Tab</strong></span>, <span><strong class="keycap">Up</strong></span>, or <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">I</strong></span></p>
            </td><td>
              <p class="CellBody">Moves up one item in the list.</p>
            </td></tr><tr><td>
              <p class="CellBody">
                <span><strong class="keycap">Home</strong></span> or <span><strong class="keycap">End</strong></span></p>
            </td><td>
              <p class="CellBody">If an item is selected in the list, the cursor moves to the top or bottom of the list, otherwise the cursor moves to the beginning or end of the text box, respectively.</p>
            </td></tr><tr><td>
              <p class="CellBody">
                <span><strong class="keycap">PgUp</strong></span> or <span><strong class="keycap">PgDn</strong></span></p>
            </td><td>
              <p class="CellBody">Moves up or down a page of items in the list.</p>
            </td></tr><tr><td>
              <p class="CellBody">
                <span><strong class="keycap">Space</strong></span>
              </p>
            </td><td>
              <p class="CellBody">If an item is selected in the list, that item is used and you are advanced to the next argument.</p>
            </td></tr></tbody></table></div><p class="NormalText">For a demonstration of how completions in dialogs work, complete the following steps: </p><div class="orderedlist"><ol type="1"><li><p class="NormalText">From the main menu, click <span><strong class="guimenu">Project </strong></span> &#8594; <span><strong class="guimenuitem">New</strong></span>.</p></li><li><p class="NormalText">Press <span><strong class="keycap">Tab</strong></span> to jump to the <span><strong class="guilabel">Location</strong></span> field.</p></li><li><p class="NormalText">Start typing a directory path. Notice the completion options.</p></li><li><p class="NormalText">Press <span><strong class="keycap">Esc</strong></span> to cancel.</p></li></ol></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_completions_12767_1002926"></a>
        <a class="indexterm" name="sect_completions_2DE415FC_6B07"></a>Argument Completion</h4></div></div></div><p class="NormalText">For a larger list of possible matches, type "<span><strong class="command">?</strong></span>" to list the matches. For a demonstration of how this works, complete the following steps: </p><div class="orderedlist"><ol type="1"><li><p class="NormalText">From the main menu, click <span><strong class="guimenu">Macro </strong></span> &#8594; <span><strong class="guimenuitem">Open Form</strong></span>.</p><div class="mediaobject"><img src="Resources/openform11.jpg"></div></li><li><p class="NormalText">Type <span class="bold"><strong>_open</strong></span> and the <span><strong class="command">_open_form</strong></span> command is highlighted.</p></li><li><p class="NormalText">Press the question mark key (<span><strong class="keycap">?</strong></span>) to display the Select a Command Parameter dialog. A selection list of possible matches to an argument that is partially-typed is displayed.</p></li></ol></div><div class="mediaobject"><img src="Resources/selectcommandparam11.jpg"></div></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_completions_12767_1009208"></a>Configuring Completion Settings</h3></div></div></div><p class="NormalText">To configure Auto-Complete settings, from the main menu, click <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Languages</strong></span>, expand your language category and language, then select <span><strong class="guimenu">Auto-Complete</strong></span>. See <a href="ch12s11.htm#sect_options_menuanddialogs_14207_69582">Language-Specific Auto-Complete Options</a> for more information.</p><p class="NormalText"></p></div></div></body></html>
