<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Encoding</title><link rel="stylesheet" href="slickedit_help.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.71.1"><link rel="start" href="index.htm" title="Welcome to SlickEdit 2013"><link rel="up" href="ch13.htm" title="Chapter 13.  Appendix"><link rel="prev" href="ch13.htm" title="Chapter 13.  Appendix"><link rel="next" href="ch13s03.htm" title="Environment Variables"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><p class="HeaderText"><a href="index.htm#contents">Contents</a> : <a href="ix01.htm">Index</a> : <a href="search.htm">Search</a></p><hr><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="sect_encoding_12361_31495"></a>
    <a name="sect_encoding_12361_998341"></a>
    <a class="indexterm" name="sect_encoding_11F526B8_80B8"></a>
    <a class="indexterm" name="sect_encoding_1AFE8606_7483"></a>
    <a class="indexterm" name="sect_encoding_7B75E5DD_9D9A"></a>
    <a class="indexterm" name="sect_encoding_A091F394_9DE4"></a>
    <a class="indexterm" name="sect_encoding_CB43C7E6_4955"></a>
    <a class="indexterm" name="sect_encoding_8CE2528C_E8E4"></a>
    <a class="indexterm" name="sect_encoding_1F0A0B15_E0F6"></a>Encoding</h2></div></div></div><p class="NormalText">Encodings are used to convert a file to either SBCS/DBCS for the active code page or Unicode (more specifically UTF-8) data. By default, XML and Unicode files with signatures (UTF-8, UTF-16 and UTF-32) files are automatically loaded as Unicode UTF-8 data, while other more common program source files like <code class="filename">.c</code>, <code class="filename">.java</code>, and <code class="filename">.cs</code> source files are loaded as SBCS/DBCS active code page data. </p><p class="NormalText">All file data can be configured to Unicode UTF-8 data, but this would cause some problems. Loading files containing SBCS/DBCS data would take significantly longer, slowing down parsing by Context Tagging® and any other multi-file operations. In addition, Unicode editors cannot support all the features supported by SBCS/DBCS editors due to font limitations. For more information, see <a href="ch13s02.htm#sect_encoding_12361_Unicode_Limitations">Unicode Limitations</a>. </p><p class="NormalText">To provide better support for editing Unicode and non-Unicode files, two modes of editing exist: Unicode and SBCS/DBCS mode. Files that contain Unicode, XML, or code page data not compatible with the active code page should be opened as Unicode files.</p><p class="NormalText">The following are non-Unicode encodings and put the editor in SBCS/DBCS editing mode: <span><strong class="guilabel">Default</strong></span>, <span><strong class="guilabel">Text</strong></span><span><strong class="command">, </strong></span><span><strong class="guilabel">SBCS/DBCS mode</strong></span>, <span><strong class="guilabel">Binary, SBCS/DBCS mode</strong></span>, and <span><strong class="guilabel">EBCDIC, SBCS/DBCS mode</strong></span>. In addition, the <span><strong class="guilabel">Auto Unicode</strong></span>, <span><strong class="guilabel">Auto Unicode2</strong></span>, <span><strong class="guilabel">Auto EBCDIC and Unicode</strong></span>, and <span><strong class="guilabel">Auto EBCDIC and Unicode2</strong></span> encodings put the editor into SBCS/DBCS editing mode when the file is determined not to be Unicode. All other encodings put the editor in Unicode mode and require that the file data be converted to UTF-8.</p><p class="NormalText">There are many encodings available, including:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
        <span><strong class="guilabel">Auto XML</strong></span> - This encoding specifies that the file encoding be determined based on XML standards and that the file be loaded as Unicode data. The encoding is determined based on the encoding specified by the <span><strong class="command">?xml</strong></span> tag. If the encoding is not specified by the <span><strong class="command">?xml</strong></span>, the file data is assumed to be UTF-8 data which is consistent with XML standards. We applied some modifications to the standard XML encoding determination to allow for some user error. If the file has a standard Unicode signature, the Unicode signature is assumed to be correct and the encoding defined by the <span><strong class="command">?xml</strong></span> tag is ignored.</p></li><li><p class="NormalText">
        <span><strong class="guilabel">Auto Unicode</strong></span> - When this encoding is chosen and the file has a standard Unicode signature, the file is loaded as Unicode data. Otherwise the file is loaded as SBCS/DBCS data.</p></li><li><p class="NormalText">
        <span><strong class="guilabel">Auto Unicode2</strong></span> - When this encoding is chosen and the file has a standard Unicode signature or looks like a Unicode file, the file is loaded as Unicode data. Otherwise the file is loaded as SBCS/DBCS data. This option is NOT fool-proof and may give incorrect results.</p></li><li><p class="NormalText">
        <span><strong class="guilabel">Auto EBCDIC</strong></span> - When this encoding is chosen and the file looks like an EBCDIC file, the file is loaded as Unicode data. Otherwise, the file is loaded as SBCS/DBCS data. This option is NOT fool-proof and may give incorrect results. The option does attempt to support binary EBCDIC files.</p></li><li><p class="NormalText">
        <span><strong class="guilabel">Auto EBCDIC and Unicode2</strong></span> - This encoding is a combination of the Auto EBCDIC and Auto Unicode2 encodings described above.</p></li></ul></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_encoding_12361_74506"></a>
      <a name="sect_encoding_12361_1002664"></a>
      <a class="indexterm" name="sect_encoding_2A5E21A4_8C66"></a>
      <a class="indexterm" name="sect_encoding_288C7D97_33A9"></a>Using Unicode</h3></div></div></div><p class="NormalText">To use encodings in SlickEdit®, Unicode support is required (OEMs typically turn this feature off). Unicode is supported for the following list of features:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">All Context Tagging® features.</p></li><li><p class="NormalText">Color Coding.</p></li><li><p class="NormalText">Level 1 regular expressions as defined by the Unicode consortium.</p></li><li><p class="NormalText">Multi-file search and replace.</p></li><li><p class="NormalText">Support for many encodings including UTF-8, UTF-16, UTF-32, and many code pages. Automatic encoding recognition for XML files. Configure encoding recognition per extension or globally. Optionally store signatures and specify little endian or big endian. Use the Save As or Write Selection dialog to convert data to a particular file encoding.</p></li><li><p class="NormalText">Support for converting Unicode to UNC data and visa versa. Supported UCN formats include <span><strong class="guilabel">\xHHHH</strong></span>, <span><strong class="guilabel">\x{HHHH}</strong></span>, <span><strong class="guilabel">\uHHHH</strong></span>, <span><strong class="guilabel">&amp;xHHHH;</strong></span>, and <span><strong class="guilabel">&amp;xDDDD;</strong></span>. This is useful for specifying Unicode character strings in SBCS/DBCS active code page source files. See <a href="ch13s02.htm#sect_encoding_12361_converting_unicode_to_ucn">Converting Unicode to UCN</a>.</p></li><li><p class="NormalText">Multiple clipboards.</p></li><li><p class="NormalText">Sorting.</p></li><li><p class="NormalText">3-Way Merge.</p></li><li><p class="NormalText">Support for composite and surrogate characters.</p></li><li><p class="NormalText">Support for storing up to 31-bit Unicode characters.</p></li><li><p class="NormalText">SmartPaste®.</p></li><li><p class="NormalText">Syntax Expansion and Syntax Indenting.</p></li><li><p class="NormalText">Code beautifiers.</p></li><li><p class="NormalText">Support for almost all of SlickEdit's SBCS/DBCS active code page features.</p></li></ul></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_encoding_12361_1002692"></a>
        <a class="indexterm" name="sect_encoding_03EB13A3_297C"></a>
        <a class="indexterm" name="sect_encoding_DFA2CD95_B993"></a>Unicode File Recognition</h4></div></div></div><p class="NormalText">By default, XML and Unicode files with signatures (UTF-8, UTF-16 and UTF-32) files are automatically loaded as Unicode. If you have Unicode files that are not XML and do not have signatures, configure default options to get the best recognition possible. This is important because some features such as drag/drop files and DIFFzilla® do not prompt you for the file encoding.</p><p class="NormalText">Each extension may have its own encoding specification. If the extension-specific encoding is set to <span><strong class="guilabel">Default</strong></span>, then the global setting defined at <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Languages </strong></span> &#8594; <span><strong class="guimenuitem">File Extension Manager</strong></span> is used. Both the extension-specific and global setting are overridden if you previously specified an encoding in the Open dialog. The encoding used to override default encoding settings is recorded. The setting is then reused the next time you open the same file. This provides you with per-file encoding support.</p><p class="NormalText">If you have non-XML UTF-16 files that have signatures, then try selecting <span><strong class="guilabel">Auto Unicode2</strong></span> as an extension-specific or global encoding. Since there is no option for recognizing UTF-8 or UTF-32 files (other than Auto XML) by looking at the file contents, you will either need to set an extension-specific encoding, or specify the encoding in the Open dialog the first time you open the file.</p><p class="NormalText">Some compilers (such as Visual C++) let you specify the code page in the source file (in fact, more than one code page can be used in the file). This is not supported, so the assumption is that the file is SBCS/DBCS active code page data.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_encoding_12361_1002698"></a>
        <a class="indexterm" name="sect_encoding_0424AC71_A502"></a>
        <a class="indexterm" name="sect_encoding_14C75DE2_A45F"></a>Opening Unicode Files</h4></div></div></div><p class="NormalText">To open a Unicode file, complete the following steps:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">Use the Open dialog (<span><strong class="guimenu">File </strong></span> &#8594; <span><strong class="guimenuitem">Open</strong></span>).</p></li><li><p class="NormalText">Specify the encoding if necessary.</p></li><li><p class="NormalText">Press <span><strong class="keycap">Enter</strong></span>.</p></li></ol></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_encoding_12361_20343"></a>
        <a name="sect_encoding_12361_1004553"></a>
        <a class="indexterm" name="sect_encoding_30B05902_7BEB"></a>Surrogate Support</h4></div></div></div><p class="NormalText">Unicode data is stored as UTF-8 and not UTF-16. Since the Windows Win32 calls are used to implement some Unicode features there are some issues. By default, Windows does not support surrogates. You must use the <span><strong class="command">regedit</strong></span> program to turn on surrogate support.</p><p class="NormalText">To turn on surrogate support, run the <span><strong class="command">regedit</strong></span> program and go to the following key location:</p><p class="NormalText">
        <code class="filename">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\LanguagePack</code>
        <a class="indexterm" name="sect_encoding_FBD78B5E_1EAC"></a>
      </p><p class="NormalText">Set the value for <span><strong class="guilabel">SURROGATE</strong></span> to <span><strong class="guilabel">0x00000002</strong></span>.</p><p class="NormalText">Casing features (uppercase, lowercase, ignore case) do not support surrogates. Windows is used for casing support and Windows casing features do not support surrogates.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_encoding_12361_converting_unicode_to_ucn"></a>
        <a name="sect_encoding_12361_1002716"></a>
        <a class="indexterm" name="sect_encoding_1C734C89_FE66"></a>
        <a class="indexterm" name="sect_encoding_361175FB_D14F"></a>
        <a class="indexterm" name="sect_encoding_70B7B56C_C359"></a>
        <a class="indexterm" name="sect_encoding_0EB0EFB5_3B73"></a>Converting Unicode to UCN</h4></div></div></div><p class="NormalText">You can convert a selection from Unicode to UCN or vice-versa. SlickEdit® conversion features are located on the <span><strong class="guimenu">Edit </strong></span> &#8594; <span><strong class="guimenuitem">Other</strong></span> menu. The <span><strong class="guimenu">Edit </strong></span> &#8594; <span><strong class="guimenuitem">Other </strong></span> &#8594; <span><strong class="guimenuitem">Unicode to UCN</strong></span> conversion feature is most useful for specifying Unicode character strings in SBCS/DBCS active code page source files. For example, here are the steps to store some UCN in a Java source file:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">Open the Unicode file containing the Unicode characters or create a new Unicode file and enter the characters you want to convert.</p></li><li><p class="NormalText">Select the Unicode characters you want to convert.</p></li><li><p class="NormalText">Execute the <span><strong class="guimenu">Edit </strong></span> &#8594; <span><strong class="guimenuitem">Other </strong></span> &#8594; <span><strong class="guimenuitem">Copy Unicode As </strong></span> &#8594; <span><strong class="guimenuitem">Java/C# (UTF-16 \uHHHH)</strong></span> menu item.</p></li><li><p class="NormalText">Open the Java source file and paste (<span><strong class="guimenu">Edit </strong></span> &#8594; <span><strong class="guimenuitem">Paste</strong></span>) the UCN data into the file.</p></li></ol></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_encoding_12361_Unicode_Limitations"></a>
        <a name="sect_encoding_12361_1002724"></a>
        <a class="indexterm" name="sect_encoding_714C3968_0347"></a>Unicode Limitations</h4></div></div></div><p class="NormalText">The following is a list of Unicode limitations:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">Bold and italics color-coding is not supported. Support for this will be added in a future version.</p></li><li><p class="NormalText">Tab character operations are not fully supported. Tab display, the <span><strong class="guilabel">Expand tabs to spaces</strong></span> save option (<span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">File Options </strong></span> &#8594; <span><strong class="guimenuitem">Save</strong></span>), and save with tabs (<span><strong class="command">save +t</strong></span>) only work correctly if all the characters are below 128. The <span><strong class="guilabel">Expand tabs to spaces</strong></span> load option (<span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">File Options </strong></span> &#8594; <span><strong class="guimenuitem">Load</strong></span>) is ignored.</p></li><li><p class="NormalText">Column selections do not fully support Unicode. If all the characters are below 128 and the font is fixed then it works. Support for this will be added in a future version.</p></li><li><p class="NormalText">Word Wrap does not fully support Unicode. If all the characters are below 128 and the font is fixed, then it works. Support for this will be added in a future version.</p></li><li><p class="NormalText">The Unicode line end character <span><strong class="command">0x2048</strong></span> is not supported.</p></li><li><p class="NormalText">Hex editing is not supported. The current character (Composite character) is displayed on the status line. Also, use the Open dialog with the <span><strong class="guilabel">Binary, SBCS/DBCS mode</strong></span> encoding to view a Unicode file in hexadecimal.</p></li><li><p class="NormalText">Casing features (uppercase, lowercase, ignore case) do not support surrogates. Windows is relied upon for casing support, and Windows casing features do not support surrogates. See <a href="ch13s02.htm#sect_encoding_12361_20343">Surrogate Support</a>.</p></li><li><p class="NormalText">Current Line Highlight (<span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Appearance </strong></span> &#8594; <span><strong class="guimenuitem">General</strong></span>) does not support rulers.</p></li><li><p class="NormalText">Vertical line column (<span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Appearance </strong></span> &#8594; <span><strong class="guimenuitem">General</strong></span>) is not supported.</p></li><li><p class="NormalText">Truncation line length is not supported.</p></li><li><p class="NormalText">
            <span><strong class="guilabel">Record width</strong></span> on the File Open dialog is not supported.</p></li><li><p class="NormalText">DDE is not supported. Unicode DDE does not work with Internet Explorer or Netscape®. You can view files with Unicode data in Internet Explorer; however, this feature will fail if the file name contains characters not in the active code page.</p></li><li><p class="NormalText">Version control supports files containing Unicode data but does not support file names that contain characters not in the active code page.</p></li><li><p class="NormalText">Special character display is not supported for Unicode buffers.</p></li><li><p class="NormalText">The <span><strong class="command">grew</strong></span> program does not support Unicode and can only be used on SBCS/DBCS active code page text.</p></li><li><p class="NormalText">If you load the same source file in Unicode and SBCS/DBCS mode, the Context Tagging® database will have incorrect seek positions. It is important to use the default load options and to always load source files in the same encoding so that the Context Tagging seek positions match the editor seek positions.</p></li><li><p class="NormalText">The install (<code class="filename">setup.exe</code>), unionist (<code class="filename">uninstall.exe</code>), and update (<code class="filename">update.exe</code>) programs are not Unicode applications so the installation directory must contain characters in the active code page.</p></li></ul></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="sect_encoding_12361_1002741"></a>
        <a class="indexterm" name="sect_encoding_65202A46_5BAD"></a>Unicode Implementation</h4></div></div></div><p class="NormalText">Native Unicode and SBCS/DBCS editing modes are supported. When you edit a SBCS/DBCS (active code page) file such as a <code class="filename">.c</code>, <code class="filename">.h</code>, or <code class="filename">.java</code> file, the data is loaded as SBCS/DBCS data and is not converted to Unicode. When you edit a Unicode file, such as an XML file, the data is converted to UTF-8 that is one of the standard formats for supporting Unicode files. There are several advantages to this implementation: </p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">Since almost all source files for programming are stored as SBCS/DBCS, loading these files is significantly faster. This is very important to our customers who expect superior performance from SlickEdit®.</p></li><li><p class="NormalText">Unicode editing modes cannot support all the features you were used to when editing SBCS/DBCS files (see <a href="ch13s02.htm#sect_encoding_12361_Unicode_Limitations">Unicode Limitations</a>).</p></li><li><p class="NormalText">Macros can be written once to support both editing modes. This was very important to us because we wanted to reduce development time.</p></li><li><p class="NormalText">Since Unicode is stored as UTF-8, only one set of binaries is required. Most products that support SBCS/DBCS and Unicode (UTF-16), use preprocessing. This requires two sets of binaries.</p></li></ul></div><p class="NormalText"></p></div></div></div></body></html>
