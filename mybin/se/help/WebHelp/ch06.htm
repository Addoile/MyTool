<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Chapter 6.  Context Tagging®</title><link rel="stylesheet" href="slickedit_help.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.71.1"><link rel="start" href="index.htm" title="Welcome to SlickEdit 2013"><link rel="up" href="index.htm" title="Welcome to SlickEdit 2013"><link rel="prev" href="ch05s02.htm" title="Working with Files"><link rel="next" href="ch06s02.htm" title="Building and Managing Tag Files"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><p class="HeaderText"><a href="index.htm#contents">Contents</a> : <a href="ix01.htm">Index</a> : <a href="search.htm">Search</a></p><hr><div class="chapter" lang="en"><div class="titlepage"><div><div><h2 class="title"><a name="chapter_95c49aed-cf23-4510-bc46-d4e3a815cc18"></a>Chapter 6. 
      <a name="chap_contexttagging_13227_999029"></a>Context Tagging®</h2></div></div></div><p class="NormalText">This chapter describes SlickEdit Context Tagging® system used for 
    symbol analysis, the features that use Context Tagging, and how to manage tag files. </p><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="sect_contexttaggingoverview_14396_11377"></a>
    <a name="sect_contexttaggingoverview_14396_1009503"></a>
    <a class="indexterm" name="sect_contexttaggingoverview_284D8CED_2332"></a>
    <a class="indexterm" name="sect_contexttaggingoverview_D986FB43_3B5A"></a>
    <a class="indexterm" name="sect_contexttaggingoverview_5E0B14FE_8505"></a>Context Tagging Features</h2></div></div></div><p class="NormalText">Context Tagging® is a feature set that performs expression type, scope, and 
    inheritance analysis as well as symbol look-up within the current context to help you navigate and 
    write code. Context Tagging uses an engine that parses your code and builds a database of symbol 
    definitions and declarations commonly referred to as <span class="emphasis"><em>tags</em></span>. Context Tagging 
    features work with <span class="emphasis"><em>your</em></span> source code, not just standard APIs (Application 
    Programming Interfaces). Symbol information is updated dynamically as you edit your source 
    code.</p><p class="NormalText">The Context Tagging feature set includes:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
        <a href="ch06.htm#sect_contexttaggingoverview_14396_40211">Tag-Driven Navigation</a>
      </p></li><li><p class="NormalText">
        <a href="ch06.htm#sect_contexttaggingoverview_14396_37981">List Members</a>
      </p></li><li><p class="NormalText">
        <a href="ch06.htm#sect_contexttaggingoverview_14396_65887">Parameter Information</a>
      </p></li><li><p class="NormalText">
        <a href="ch06.htm#sect_contexttaggingoverview_14396_49208">Auto List Compatible Parameters</a>
      </p></li><li><p class="NormalText">
        <a href="ch06.htm#sect_contexttaggingoverview_14396_96407">Completions</a>
      </p></li><li><p class="NormalText">
        <a href="ch06.htm#sect_contexttaggingoverview_14396_77982">Symbol Browsing</a>
      </p></li><li><p class="NormalText">
        <a href="ch06.htm#sect_contexttaggingoverview_14396_48623">Statement Level Tagging</a>
      </p></li></ul></div><p class="NormalText">Before you begin working with these features, some configuration is required. See <a href="ch06s02.htm#sect_buildingmanagingtagfiles_14858_71586">Building Tag Files</a>.</p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_contexttaggingoverview_14396_40211"></a>
      <a name="sect_contexttaggingoverview_14396_1003030"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_97ADB38D_03C5"></a>Tag-Driven Navigation</h3></div></div></div><p class="NormalText">The Context Tagging database allows you to navigate your code, jumping from a 
      symbol to its definition or its references. For more information, see <a href="ch08s04.htm#sect_navigation_12313_69846">Symbol Navigation</a>.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_contexttaggingoverview_14396_37981"></a>
      <a name="sect_contexttaggingoverview_14396_1002581"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_8ED106E9_9CB6"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_1BCB70AF_EC3E"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_48D78A7D_B3E9"></a>List Members</h3></div></div></div><p class="NormalText">When typing a member access operator (<span><strong class="keycap">Dot</strong></span>, 
      <span><strong class="keycap">Comma</strong></span>, "<span><strong class="command">-&gt;</strong></span>", and "<span class="bold"><strong>:</strong></span>" for 
      C++; <span><strong class="keycap">Dot</strong></span> for Java; <span><strong class="command">IN</strong></span> and <span><strong class="command">OF</strong></span> for COBOL), 
      members are automatically listed. You can access this feature on demand by pressing <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Space</strong></span> or <span><strong class="keycap">Alt</strong></span>+<span><strong class="keycap">Dot</strong></span> when the cursor is 
      positioned after the member access character. </p><div xmlns:fo="http://www.w3.org/1999/XSL/Format" class="tip" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="admon">Tip</h3><p class="CellBody">When the cursor is positioned after a member access character, like the 
        dot in "foo.", <span><strong class="keycap">Alt</strong></span>+<span><strong class="keycap">Dot</strong></span> will display a list of members 
        for that symbol. If the cursor is not positioned after a member access character, this key binding 
        will display a list of symbols for the current context.</p></div><p class="NormalText">If you want to disable automatic listing and only list members on demand, 
      turn List Members off, as follows:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">From the main menu, click <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Languages</strong></span>, expand your language category and language, then select 
          <span><strong class="guilabel">Context Tagging</strong></span>.</p></li><li><p class="NormalText">Clear the <span><strong class="guilabel">Auto-list members</strong></span> check box.</p></li></ol></div><p class="NormalText">The following example shows the results of what is displayed after typing a <span><strong class="keycap">Dot</strong></span> when entering Java source. Notice that the Javadoc comments are displayed in a mini-HTML browser. To view documentation for Java APIs, you must install the source files as part of the JDK. If clicking on a URL, the default HTML browser starts. Clicking on other hypertext links navigates within the comment window. The equals method in the example below has two occurrences, one in the String class and one in the Object class. Press <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">PgDn</strong></span> or <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">PgUp</strong></span> to select the next or previous occurrence.</p><div class="mediaobject"><img src="Resources/autolist.png"></div><p class="NormalText">The example below shows the display after typing a <span><strong class="keycap">Dot</strong></span> when entering C++ source code<a class="indexterm" name="sect_contexttaggingoverview_DDFEFB27_97C6"></a>. The stack class is one of the C++ standard template library classes.</p><div class="mediaobject"><img src="Resources/autolist2.png"></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_contexttaggingoverview_14396_65887"></a>
      <a name="sect_contexttaggingoverview_14396_1009080"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_8CD6904A_A1AE"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_0A7F8CC0_4B1D"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_F6A401F3_2B6D"></a>Parameter Information</h3></div></div></div><p class="NormalText">The prototype for a function is automatically displayed when typing a function operator such as the open parenthesis. This also highlights the current argument within the displayed prototype. When working with C++, parameter info is also automatically displayed when typing a template argument operator such as <span class="bold"><strong>&lt;</strong></span>.</p><p class="NormalText">The following example shows the result of pressing <span><strong class="keycap">Alt</strong></span>+<span><strong class="keycap">Comma</strong></span> inside the argument list of the Java API String method <span><strong class="command">startsWith</strong></span>. The Javadoc comments are displayed in a mini-HTML browser. To view documentation for Java APIs, you must install the source files as part of the JDK. If clicking on a URL, the default HTML browser starts. Clicking on other hypertext links will navigate within the comment window. The <span><strong class="command">startsWith</strong></span> method has two overloads that accept different arguments. Press <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">PgDn</strong></span> or <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">PgUp</strong></span> to select the next or previous occurrence.</p><div class="mediaobject"><img src="Resources/parameterinfo1.png"></div><p class="NormalText">The example below shows the result of pressing <span><strong class="keycap">Alt</strong></span>+<span><strong class="keycap">Comma</strong></span> inside the argument list of the WIN32 API function <span><strong class="command">CreateWindowEx</strong></span>.</p><div class="mediaobject"><img src="Resources/parameterinfo2.png"></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_contexttaggingoverview_14396_49208"></a>
      <a name="sect_contexttaggingoverview_14396_1015000"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_EAC4B287_61DE"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_DE549012_E007"></a>Auto List Compatible Parameters</h3></div></div></div><p class="NormalText">When typing a function operator such as the open parenthesis, "<span><strong class="command">(</strong></span>", a list of compatible variables and expressions for the current argument is displayed. Auto List Compatible Parameters can also be used instead of List Members, in assignment statements (<span><strong class="command">x=&lt;Alt+Comma&gt;</strong></span>) and when listing members of a class or struct. Keep in mind, not all possible variables and expressions are listed. Press <span><strong class="keycap">Alt</strong></span>+<span><strong class="keycap">Dot</strong></span> if the symbol that you want is not listed. To access Auto List Compatible Parameters on demand, press <span><strong class="keycap">Alt</strong></span>+<span><strong class="keycap">Comma</strong></span>. If you want to disable automatic listing and only list parameters on demand, turn Auto List Compatible Parameters off, as follows:</p><div class="orderedlist"><ol type="1"><li><p class="NormalText">From the main menu, click <span><strong class="guimenu">Tools </strong></span> &#8594; <span><strong class="guimenuitem">Options </strong></span> &#8594; <span><strong class="guimenuitem">Languages</strong></span>, expand your language category and language, then select 
          <span><strong class="guilabel">Context Tagging</strong></span>.</p></li><li><p class="NormalText">Clear the <span><strong class="guilabel">Auto-list compatible parameters</strong></span> check box.</p></li></ol></div><p class="NormalText">The following example displays the results of pressing <span><strong class="keycap">Alt</strong></span>+<span><strong class="keycap">Comma</strong></span> after an assignment operator. The <span><strong class="command">Rect</strong></span>, <span><strong class="command">pRect</strong></span>, and <span><strong class="command">argv</strong></span> are not listed because their types do not match.</p><div class="mediaobject"><img src="Resources/parameterinfo3.png"></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_contexttaggingoverview_14396_96407"></a>
      <a name="sect_contexttaggingoverview_14396_1007841"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_BCCD2C90_C599"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_29CEEBEF_AC26"></a>Completions</h3></div></div></div><p class="NormalText">Completions save keystrokes as you are typing code by providing a way to automatically complete partially-typed text. Press <span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">Space</strong></span> for SlickEdit® to automatically complete the rest of the symbol you're currently typing. If a unique match is not found, a list is displayed allowing the selection of the exact match. See <a href="ch08s09.htm">Completions</a> for more information.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_contexttaggingoverview_14396_77982"></a>
      <a name="sect_contexttaggingoverview_14396_1007915"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_822D6EC0_1889"></a>Symbol Browsing</h3></div></div></div><p class="NormalText">
      SlickEdit® gives you the ability to browse and view symbols in your files 
      or workspaces. There are several tool windows and dialogs that display information as you work to 
      help you find what you need exactly when you need it:</p><div class="itemizedlist"><ul type="disc"><li><p class="NormalText">
          <span class="bold"><strong>Class</strong></span> - This tool window provides an outline view of both the members of the current class as well as any visible inherited members. It also shows the inheritance hierarchy of the current class. The Class tool window is docked as a tab on the left side of the editor by default.</p></li><li><p class="NormalText">
          <span class="bold"><strong>Current Context</strong></span> - Current Context displays the logical location of the cursor within your code. If it is within a class, it displays the class name. If it is within a function, it displays the function name. If the function is within a class, it displays the class and the function name. The tool window is docked in the top upper-right section of the editor by default.</p></li><li><p class="NormalText">
          <span class="bold"><strong>Defs</strong></span> - The Defs (Definitions) tool window contains the defs (definitions) browser, which provides an outline view of symbols in the current workspace. It is docked as a tab on the left side of the editor by default.
        </p></li><li><p class="NormalText">
          <span class="bold"><strong>Find Symbol</strong></span> - This tool 
          window is used to locate symbols (tags) in 
          your code. It allows you to search for symbols by name using either a regular expression, 
          substring, or fast prefix match. This window can be displayed by clicking <span><strong class="guimenu">Search </strong></span> &#8594; <span><strong class="guimenuitem">Find Symbol</strong></span> or by using the <span><strong class="command">gui_search</strong></span> command.</p></li><li><p class="NormalText">
          <span class="bold"><strong>Preview</strong></span> - The Preview tool window provides a portal for viewing information in other files without having to open them in the editor. It automatically shows this information when you are working with certain features. This window is docked as a tab on the bottom of the editor by default.</p></li><li><p class="NormalText">
          <span class="bold"><strong>References</strong></span> - This window displays the list of symbol 
          references (uses) found the last time that you used the Go to Reference feature (<span><strong class="keycap">Ctrl</strong></span>+<span><strong class="keycap">/</strong></span> or 
          <span><strong class="command">push_ref</strong></span> command (see <a href="ch08s04.htm#sect_navigation_12313_69846">Symbol Navigation</a> for 
          more information).</p></li><li><p class="NormalText">
          <span class="bold"><strong>Symbols</strong></span> - The Symbols tool window contains the symbol browser, which lists symbols from all of the tag files. It is docked as a tab on the left side of the editor by default.</p></li><li><p class="NormalText">
          <span class="bold"><strong>Symbol Properties</strong></span> - This window displays detailed information about the symbol at the cursor location. It can be displayed by clicking <span><strong class="guimenu">View </strong></span> &#8594; <span><strong class="guimenuitem">Tool Windows </strong></span> &#8594; <span><strong class="guimenuitem">Symbol Properties</strong></span> or by using the <span><strong class="command">activate_tag_properties_toolbar</strong></span> command.</p></li></ul></div><p class="NormalText">For more detailed information about these tool windows and how SlickEdit can help you browse symbols, see <a href="ch08s05.htm">Symbol Browsing</a>. For information about how to navigate between symbols in files, see <a href="ch08s04.htm#sect_navigation_12313_69846">Symbol Navigation</a>.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sect_contexttaggingoverview_14396_48623"></a>
      <a name="sect_contexttaggingoverview_14396_1002896"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_B1A92F8E_D038"></a>
      <a class="indexterm" name="sect_contexttaggingoverview_E4DB6C23_1796"></a>Statement Level Tagging</h3></div></div></div><p class="NormalText">Statement Level Tagging is a feature of Context Tagging that provides a more 
      detailed view of items in the Defs tool window for C/C++, Java, Python, and Visual Basic .NET. 
      Along with definitions, view constructs like <span><strong class="command">if</strong></span>, <span><strong class="command">while</strong></span>, and 
      <span><strong class="command">for</strong></span> statements. It also displays every non-comment line of code. To see this 
      feature in action, from the <a href="ch08s05.htm#sect_symbolbrowsing_12907_70292">Defs Tool Window</a>, right-click and 
      select <span><strong class="guilabel">Show Statements</strong></span>.</p><p class="NormalText"></p></div></div></div></body></html>
