<profiles>
    <profile name="Default" lang="cs">
        <P N="sp_stmt_before_semi" V="5" E="1"/>
        <P N="braceloc_multiline_cond" V="24" E="1"/>
        <P N="varalign_justification" V="0" E="0"/>
        <P N="instvaralign_justification" V="0" E="0"/>
        <P N="braceloc_enum" V="15" E="1"/>
        <P N="braceloc_anonmeth" V="15" E="1"/>
        <P N="xdoc_nl_after_opentag" V="4" E="0"/>
        <P N="xdoc_nl_before_closetag" V="4" E="0"/>
        <P N="sp_fun_colon" V="3" E="1"/>
        <P N="bl_start_block_lock"  V="0" E="0"/>
        <P N="bl_end_block_lock"    V="0" E="0"/>
        <P N="bl_start_block_using" V="0" E="0"/>
        <P N="bl_end_block_using"   V="0" E="0"/>
        <P N="sp_lock_lparen"   V="4" E="1" /> 
        <P N="sp_lock_rparen"   V="4" E="1" />
        <P N="sp_lock_padparen" V="5" E="1" />
        <P N="braceloc_lock"    V="15" E="1" />
        <P N="sp_using_comma" V="2" E="1"/>   
        <P N="sp_using_lparen" V="4" E="1"/>
        <P N="sp_using_padparen" V="5" E="1"/>
        <P N="sp_using_rparen" V="4" E="1"/>
        <P N="braceloc_using" V="15" E="1"/>
        <P N="braceloc_namespace" V="15" E="1"/>
        <P N="braceloc_property" V="15" E="1"/>
        <P N="braceloc_outer_property" V="15" E="1"/>
        <P N="nl_before_where" V="5" E="0"/>
        <P N="nl_after_comma" V="4" E="0"/>
        <P N="sp_where_comma" V="2" E="1"/>
        <P N="sp_where_colon" V="2" E="1"/>
        <P N="pp_indent" V="0" E="1"/>
        <P N="pp_indent_block" V="0" E="1"/>
        <P N="pp_indent_header_guard" V="0" E="1"/>
        <P N="pp_old_style_indent" V="0" E="1"/>
        <P N="pp_code_indent" V="0" E="1"/>
        <P N="xdoc_format_pre" V="4" E="0"/>
        <P N="xdoc_between_diff_tags" V="1" E="0"/>
        <P N="xdoc_between_same_tags" V="0" E="0"/>
        <P N="xdoc_rm_blank_lines" V="4" E="0"/>
        <P N="dox_format_pre" V="4" E="0"/>
        <P N="dox_indent_param_desc" V="4" E="0"/>
        <P N="dox_indent_past_param_name" V="5" E="0"/>
        <P N="dox_force_delim_nl" V="4" E="0"/>
        <P N="dox_after_brief" V="1" E="0"/>
        <P N="dox_rm_blank_lines" V="5" E="0"/>
        <P N="dox_between_diff_tags" V="1" E="0"/>
        <P N="dox_between_same_tags" V="0" E="0"/>
        <P N="jd_format_html" V="4" E="0"/>
        <P N="jd_format_pre" V="4" E="0"/>
        <P N="jd_indent_param_desc" V="4" E="0"/>
        <P N="jd_indent_past_param_name" V="4" E="0"/>
        <P N="jd_force_delim_nl" V="4" E="0"/>
        <P N="jd_blank_lines_before_tags" V="1" E="0"/>
        <P N="jd_rm_blank_lines" V="5" E="0"/>
        <P N="jd_between_diff_tags" V="1" E="0"/>
        <P N="jd_between_same_tags" V="0" E="0"/>
        <P N="bl_between_commented_fields" V="1" E="0"/>
        <P N="sp_tmpldecl_comma" V="2" E="1"/>   
        <P N="sp_tmpldecl_equals" V="3" E="1"/>  
        <P N="sp_tmpldecl_pad" V="5" E="1"/>     
        <P N="sp_tmplparm_pad" V="5" E="1"/>     
        <P N="sp_tmpldecl_lt" V="5" E="1"/>      
        <P N="sp_tmplparm_comma" V="2" E="1"/>   
        <P N="sp_tmplparm_lt" V="5" E="1"/>      
        <P N="bl_between_fn_prototypes" V="1" E="0"/>
        <P N="bl_before_locals" V="1" E="0"/>
        <P N="bl_after_locals" V="1" E="0"/>
        <P N="bl_start_block_method" V="0" E="0"/>
        <P N="bl_start_block_if" V="0" E="0"/>
        <P N="bl_end_block_if" V="0" E="0"/>
        <P N="bl_start_block_for" V="0" E="0"/>
        <P N="bl_end_block_for" V="0" E="0"/>
        <P N="bl_start_block_while" V="0" E="0"/>
        <P N="bl_end_block_while" V="0" E="0"/>
        <P N="bl_start_block_do" V="0" E="0"/>
        <P N="bl_end_block_do" V="0" E="0"/>
        <P N="bl_end_block_switch" V="0" E="0"/>
        <P N="bl_start_block_try" V="0" E="0"/>
        <P N="bl_start_block_catch" V="0" E="0"/>
        <P N="bl_end_block_catch" V="0" E="0"/>
        <P N="bl_before_first_decl" V="0" E="0"/>
        <P N="bl_between_methods" V="0" E="0"/>
        <P N="bl_between_fields" V="0" E="0"/>
        <P N="bl_between_member_classes" V="0" E="0"/>
        <P N="bl_between_different_decls" V="0" E="0"/>
        <P N="bl_between_classes" V="0" E="0"/>
        <P N="blank_before_case" V="1" E="0"/>
        <P N="blank_before_first_case" V="0" E="0"/>
        <P N="indent_class_body" V="1" E="1"/>
        <P N="syntax_indent" V="4" E="1"/>
        <P N="tab_indent" V="4" E="1"/>
        <P N="indent_policy" V="12" E="1"/>
        <P N="st_nl_file" V="4" E="1"/>
        <P N="sp_class_lbrace" V="1" E="1"/>
        <P N="st_nl_empty" V="5" E="1"/>
        <P N="sp_catch_padparen" V="5" E="1"/>
        <P N="sp_switch_lparen" V="4" E="1"/>
        <P N="sp_arrayexpr_lbracket" V="5" E="1"/>
        <P N="sp_arraydecl_lbracket" V="5" E="1"/>
        <P N="st_fundecl_nameline" V="5" E="0"/>
        <P N="st_oneline_dowhile" V="4" E="1"/>
        <P N="sp_op_bitwise" V="3" E="1"/>
        <P N="st_oneline_catch" V="4" E="1"/>
        <P N="sp_for_lparen" V="4" E="1"/>
        <P N="sp_funcall_voidparen" V="5" E="1"/>
        <P N="sp_switch_padparen" V="5" E="1"/>
        <P N="sp_class_colon" V="3" E="1"/>
        <P N="sp_fun_padparen" V="5" E="1"/>
        <P N="sp_if_rparen" V="4" E="1"/>
        <P N="sp_op_bitand" V="0" E="1"/>
        <P N="sp_op_assignment" V="3" E="1"/>
        <P N="sp_for_comma" V="2" E="1"/>
        <P N="sp_funcall_comma" V="2" E="1"/>
        <P N="sp_class_comma" V="2" E="1"/>
        <P N="sp_arrayexpr_rbracket" V="5" E="1"/>
        <P N="sp_op_mult" V="3" E="1"/>
        <P N="sp_arraydecl_rbracket" V="4" E="1"/>
        <P N="sp_for_lbrace" V="1" E="0"/>
        <P N="st_oneline_then" V="4" E="1"/>
        <P N="sp_catch_lparen" V="4" E="1"/>
        <P N="sp_member_dot" V="0" E="1"/>
        <P N="sp_for_rparen" V="4" E="1"/>
        <P N="sp_while_rparen" V="4" E="1"/>
        <P N="sp_ret_parexpr" V="4" E="1"/>
        <P N="sp_throw_parexpr" V="4" E="1"/>
        <P N="st_nl_class" V="5" E="0"/>
        <P N="st_oneline_statement" V="4" E="1"/>
        <P N="st_oneline_elsif" V="4" E="1"/>
        <P N="sp_op_unary" V="0" E="1"/>
        <P N="sp_op_binary" V="3" E="1"/>
        <P N="sp_cast_lparen" V="5" E="1"/>
        <P N="sp_op_comparison" V="3" E="1"/>
        <P N="sp_catch_rparen" V="4" E="1"/>
        <P N="sp_fun_lparen" V="5" E="1"/>
        <P N="sp_fun_voidparen" V="5" E="1"/>
        <P N="sp_while_lbrace" V="1" E="1"/>
        <P N="sp_switch_lbrace" V="1" E="1"/>
        <P N="sp_op_logical" V="3" E="1"/>
        <P N="sp_for_semicolon" V="2" E="1"/>
        <P N="st_nl_fn" V="4" E="0"/>
        <P N="sp_cast_padparen" V="5" E="1"/>
        <P N="sp_funcall_rparen" V="5" E="1"/>
        <P N="sp_funcall_lparen" V="5" E="1"/>
        <P N="sp_fun_comma" V="2" E="1"/>
        <P N="st_leave_declmult" V="4" E="1"/>
        <P N="sp_catch_lbrace" V="1" E="1"/>
        <P N="sp_fun_lbrace" V="3" E="1"/>
        <P N="sp_if_lbrace" V="1" E="1"/>
        <P N="sp_for_padparen" V="5" E="1"/>
        <P N="sp_cast_rparen" V="5" E="1"/>
        <P N="sp_switch_rparen" V="4" E="1"/>
        <P N="sp_op_prefix" V="0" E="1"/>
        <P N="sp_funcall_padparen" V="5" E="1"/>
        <P N="sp_while_padparen" V="5" E="1"/>
        <P N="sp_while_lparen" V="4" E="1"/>
        <P N="sp_fun_rparen" V="5" E="1"/>
        <P N="st_leave_stmtmult" V="4" E="1"/>
        <P N="sp_arrayexpr_padbracket" V="5" E="1"/>
        <P N="sp_arraydecl_padbracket" V="5" E="1"/>
        <P N="st_oneline_else" V="4" E="1"/>
        <P N="st_nl_case" V="4" E="1"/>
        <P N="sp_op_postfix" V="0" E="1"/>
        <P N="sp_if_lparen" V="4" E="1"/>
        <P N="sp_if_padparen" V="5" E="1"/>
        <P N="original_tab" V="4" E="1"/>
        <P N="indent_use_tab" V="1" E="1"/>
        <P N="indent_case" V="0" E="1"/>
        <P N="indent_first_level" V="1" E="1"/>
        <P N="indent_member_access" V="0" E="1"/>
        <P N="indent_goto" V="0" E="1"/>
        <P N="align_on_equals" V="0" E="1"/>
        <P N="funcall_param_align" V="10" E="1"/>
        <P N="exp_paren_align" V="8" E="1"/>
        <P N="brace_loc_if" V="15" E="1"/>
        <P N="brace_loc_for" V="15" E="1"/>
        <P N="brace_loc_while" V="15" E="1"/>
        <P N="brace_loc_switch" V="15" E="1"/>
        <P N="brace_loc_do" V="15" E="1"/>
        <P N="brace_loc_try" V="15" E="1"/>
        <P N="brace_loc_catch" V="15" E="1"/>
        <P N="brace_loc_class" V="15" E="1"/>
        <P N="brace_loc_fun" V="15" E="1"/>
        <P N="rm_trailing_ws" V="4" E="1"/>
        <P N="rm_dup_ws" V="5" E="1"/>
        <P N="comment_indent" V="4" E="1"/>
        <P N="comment_col1_indent" V="5" E="1"/>
        <P N="allow_one_line_block" V="5" E="1"/>  <!-- controlled by class_one_line_block -->
        <P N="allow_class_one_line_block" V="4" E="1"/>
        <P N="st_newline_before_else" V="5" E="1"/>
        <P N="access_spec_indent" V="1" E="1"/>
        <P N="continuation_width" V="4" E="1"/>
        <P N="trailing_comment_align" V="2" E="1"/>
        <P N="trailing_comment_value" V="70" E="1"/>
        <P N="indent_from_brace" V="0" E="1"/>
        <P N="label_indent" V="1" E="1"/>
        <P N="case_indent_width" V="4" E="1"/>
        <P N="sp_return_padparen" V="5" E="1"/>
        <P N="sp_return_rparen" V="5" E="1"/>
        <P N="sp_throw_padparen" V="5" E="1"/>
        <P N="sp_throw_rparen" V="5" E="1"/>
        <P N="sp_expr_lparen" V="5" E="1"/>
        <P N="sp_expr_padparen" V="5" E="1"/>
        <P N="sp_stmt_semicolon" V="4" E="1"/>
        <P N="sp_expr_rparen" V="5" E="1"/>
        <P N="sp_try_lbrace" V="3" E="1"/>
        <P N="brace_follows_case" V="0" E="1"/>
        <P N="nl_indent_lone_else" V="4" E="1"/>
        <P N="rw_force_throw_parens" V="21" E="0"/>
        <P N="rw_force_return_parens" V="21" E="0"/>
        <P N="force_param_void" V="4" E="0"/>
    </profile>
</profiles>
